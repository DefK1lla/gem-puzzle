{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/js/main.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","cellSize","numbers","interval","emptyCell","top","left","value","cells","createStatsBar","statsBar","document","createElement","className","innerHTML","seconds","setInterval","time","querySelector","concat","Math","floor","startInterval","createCell","index","cellWSize","position","cellsCount","cell","style","width","height","push","elem","addEventListener","leftDiff","abs","topDiff","currentLeft","currentTop","isFinished","every","sqrt","moves","prevResults","localStorage","getItem","results","JSON","parse","setItem","stringify","sort","b","saveResults","moveCell","handleSizeChange","preventDefault","startGame","pow","target","split","_toConsumableArray","Array","keys","map","x","random","unshift","body","clearInterval","btns","restartBtn","console","log","saveBtn","resultsBtn","append","createBtns","field","FIELD_WIDTH","createField","diffuclity","size","difficulty","difficultyCurrent","difficultyList","difficultyItem","difficultyLink","href","difficultyOther","createDifficultyPanel","_localStorage$getItem"],"mappings":"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","file":"../main.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","const FIELD_WIDTH = 320;\n\nlet emptyCell = {\n  top: 0,\n  left: 0,\n  value: 0\n};\n\nlet cells = [];\ncells.push(emptyCell);\n\nlet cellSize;\nlet numbers;\nlet interval;\n\nfunction createBtns() {\n  const btns = document.createElement('div');\n  btns.className = 'btns';\n\n  const restartBtn = document.createElement('button');\n  restartBtn.className = 'btn';\n  restartBtn.innerHTML = 'Restart';\n  restartBtn.addEventListener('click', (e) => { console.log(e.target.innerHTML) });\n\n  const saveBtn = document.createElement('button');\n  saveBtn.className = 'btn';\n  saveBtn.innerHTML = 'Save';\n  saveBtn.addEventListener('click', (e) => { console.log(e.target.innerHTML) });\n\n  const resultsBtn = document.createElement('button');\n  resultsBtn.className = 'btn';\n  resultsBtn.innerHTML = 'Results';\n  resultsBtn.addEventListener('click', (e) => { console.log(e.target.innerHTML) });\n\n  btns.append(restartBtn, saveBtn, resultsBtn);\n\n  return btns;\n}\n\nfunction createStatsBar() {\n  const statsBar = document.createElement('div');\n  statsBar.className = 'stats';\n\n  statsBar.innerHTML = `\n    <div class=\"stats__moves\">\n      Moves: <span>0</span>\n    </div>\n\n    <div class=\"stats__time\">\n      Time: <span>0:0</span>\n    </div>\n  `;\n\n  let seconds = 0;\n\n  startInterval();\n\n  return statsBar;\n}\n\nfunction startInterval() {\n  let seconds = 0;\n  interval = setInterval(() => {\n    const time = document.querySelector('.stats__time span');\n    seconds++;\n    time.innerHTML = `${Math.floor(seconds / 60)}:${seconds % 60 < 10 ? '0' + seconds % 60 : seconds % 60}`;\n  }, 1000);\n}\n\nfunction stopInterval() {\n  clearInterval(interval);\n  interval = null;\n}\n\nfunction createField(cellsCount) {\n  cellSize = FIELD_WIDTH / Math.sqrt(cellsCount);\n  const field = document.createElement('div');\n  field.className = 'field';\n  field.style.width = FIELD_WIDTH + 'px';\n  field.style.height = FIELD_WIDTH + 'px';\n\n  for (let i = 1; i < cellsCount; i++) {\n    const position = {\n      left: i % Math.sqrt(cellsCount),\n      top: (i - (i % Math.sqrt(cellsCount))) / Math.sqrt(cellsCount),\n    };\n    const value = numbers[i];\n    const cell = createCell(i, value, cellSize, position, cellsCount);\n    field.append(cell);\n  }\n\n  return field;\n}\n\nfunction createCell(index, value, cellWSize, position, cellsCount) {\n  const cell = document.createElement('div');\n  cell.className = 'cell';\n\n  cell.style.width = cellWSize + 'px';\n  cell.style.height = cellWSize + 'px';\n  cell.style.left = position.left * cellWSize + 'px';\n  cell.style.top = position.top * cellWSize + 'px';\n\n  cells.push({\n    left: position.left,\n    top: position.top,\n    value,\n    elem: cell\n  });\n\n  cell.innerHTML = value;\n\n  cell.addEventListener('click', (e) => moveCell(index, cellsCount));\n\n  return cell;\n};\n\nfunction createDifficultyPanel(size) {\n  size = size ? Math.sqrt(size) + 'x' + Math.sqrt(size) : '4x4';\n\n  const difficulty = document.createElement('div');\n  difficulty.className = 'difficulty';\n\n  const difficultyCurrent = document.createElement('div');\n  difficultyCurrent.className = 'difficulty__current';\n  difficultyCurrent.innerHTML = `Frame size: ${size}`;\n\n  difficulty.append(difficultyCurrent);\n\n  const difficultyList = document.createElement('ul');\n  difficultyList.className = 'difficulty__list';\n\n  for (let i = 3; i < 9; i++) {\n    const difficultyItem = document.createElement('li');\n    difficultyItem.className = 'difficulty__item';\n\n    const difficultyLink = document.createElement('a');\n    difficultyLink.href = '#';\n    difficultyLink.className = 'difficulty__link';\n    difficultyLink.innerHTML = i + 'x' + i;\n\n    difficultyLink.addEventListener('click', handleSizeChange);\n\n    difficultyItem.append(difficultyLink);\n    difficultyList.append(difficultyItem);\n  }\n\n  const difficultyOther = document.createElement('div');\n  difficultyOther.className = 'difficulty__other';\n  difficultyOther.innerHTML = 'Other sizes: ';\n  difficultyOther.append(difficultyList);\n\n  difficulty.append(difficultyOther);\n\n  return difficulty;\n};\n\nfunction handleSizeChange(e) {\n  e.preventDefault();\n  const cellsCount = e.target.innerHTML.split('x')[0] ** 2;\n  startGame(cellsCount);\n}\n\nfunction moveCell(index, cellsCount) {\n  const cell = cells[index];\n  const leftDiff = Math.abs(emptyCell.left - cell.left),\n    topDiff = Math.abs(emptyCell.top - cell.top);\n\n  if (leftDiff + topDiff > 1) return;\n\n  document.querySelector('.stats__moves span').innerHTML++;\n\n  cell.elem.style.left = emptyCell.left * cellSize + 'px';\n  cell.elem.style.top = emptyCell.top * cellSize + 'px';\n\n  const currentLeft = cell.left,\n    currentTop = cell.top;\n\n  cell.left = emptyCell.left;\n  cell.top = emptyCell.top;\n\n  emptyCell.left = currentLeft;\n  emptyCell.top = currentTop;\n\n  const isFinished = cells.every(cell => {\n    if (cell === emptyCell) return true;\n\n    return emptyCell.top === 0 && emptyCell.left === 0\n      ? cell.value === cell.top * Math.sqrt(cellsCount) + cell.left\n      : cell.value === (cell.top * Math.sqrt(cellsCount) + cell.left) + 1;\n  });\n\n  if (isFinished) {\n    const moves = document.querySelector('.stats__moves span').innerHTML,\n      time = document.querySelector('.stats__time span').innerHTML;\n    document.querySelector('.field').innerHTML = `Hooray! You solved the puzzle in ${time} and ${moves} moves!`;\n    saveResults(moves, time);\n  }\n}\n\nfunction saveResults(moves, time) {\n  const prevResults = localStorage.getItem('results');\n  const results = prevResults ? JSON.parse(prevResults) : [];\n  results.push({ moves, time });\n  localStorage.setItem('results', JSON.stringify(results.sort((a, b) => b.moves - a.moves)));\n}\n\nfunction startGame(cellsCount) {\n  numbers = [...new Array(cellsCount).keys()]\n    .map(x => x + 1)\n    .sort((a, b) => Math.random() - 0.5);\n  numbers.unshift(0);\n\n  document.body.innerHTML = '';\n  stopInterval();\n\n  emptyCell = {\n    top: 0,\n    left: 0,\n    value: 0\n  };\n\n  cells = [];\n  cells.push(emptyCell);\n\n  const btns = createBtns();\n  document.body.append(btns);\n\n  const statsBar = createStatsBar();\n  document.body.append(statsBar);\n\n  const field = createField(cellsCount);\n  document.body.append(field);\n\n  const diffuclity = createDifficultyPanel(cellsCount);\n  document.body.append(diffuclity);\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const cellsCount = localStorage.getItem('cellsCount') ?? 16;\n  startGame(cellsCount);\n});"]}