{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/js/main.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","cellSize","cellsCount","numbers","interval","moves","time","CLICK_AUDIO","Audio","isAudio","_JSON$parse","JSON","parse","localStorage","getItem","emptyCell","top","left","value","cells","handleStart","removeItem","startGame","handleSave","game","field","document","querySelector","innerHTML","split","Math","pow","emptyIndex","findIndex","cell","splice","setItem","stringify","handleResultsShow","handleAudioToggle","target","classList","toggle","createStatsBar","start","seconds","statsBar","createElement","className","concat","floor","setInterval","createCell","index","position","style","width","height","push","elem","addEventListener","moveCell","handleSizeChange","preventDefault","abs","play","currentLeft","currentTop","isFinished","every","sqrt","_moves","_time","prevResults","results","sort","b","saveResults","prevCells","_game$cellsCount","_game$moves","_game$time","find","_toConsumableArray","Array","keys","map","x","random","unshift","body","clearInterval","btns","restartBtn","saveBtn","resultsBtn","toggleAudio","append","createBtns","FIELD_WIDTH","_cell","createField","diffuclty","size","difficulty","difficultyCurrent","difficultyList","difficultyItem","difficultyLink","href","difficultyOther","createDifficultyPanel"],"mappings":"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","file":"../main.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","const FIELD_WIDTH = 320;\nconst CLICK_AUDIO = new Audio('./audio/click.mp3');\n\nlet isAudio = JSON.parse(localStorage.getItem('isAudio')) ?? true;\n\nlet emptyCell = {\n  top: 0,\n  left: 0,\n  value: 0\n};\n\nlet cells = [];\ncells.push(emptyCell);\n\nlet cellSize;\nlet cellsCount;\nlet numbers;\nlet interval;\nlet moves;\nlet time;\n\nfunction createBtns() {\n  const btns = document.createElement('div');\n  btns.className = 'btns';\n\n  const restartBtn = document.createElement('button');\n  restartBtn.className = 'btn';\n  restartBtn.innerHTML = 'Start';\n  restartBtn.addEventListener('click', handleStart);\n\n  const saveBtn = document.createElement('button');\n  saveBtn.className = 'btn';\n  saveBtn.innerHTML = 'Save';\n  saveBtn.addEventListener('click', handleSave);\n\n  const resultsBtn = document.createElement('button');\n  resultsBtn.className = 'btn';\n  resultsBtn.innerHTML = 'Results';\n  resultsBtn.addEventListener('click', handleResultsShow);\n\n  const toggleAudio = document.createElement('button');\n  toggleAudio.className = isAudio ? 'btn active' : 'btn';\n  toggleAudio.innerHTML = 'Sound';\n  toggleAudio.addEventListener('click', handleAudioToggle);\n\n  btns.append(restartBtn, saveBtn, resultsBtn, toggleAudio);\n\n  return btns;\n}\n\nfunction handleStart(e) {\n  moves = 0;\n  time = 0;\n  localStorage.removeItem('game');\n  startGame();\n}\n\nfunction handleSave(e) {\n  const game = {};\n\n  game.field = document.querySelector('.field').innerHTML;\n  game.moves = document.querySelector('.stats__moves span').innerHTML;\n  const time = document.querySelector('.stats__time span').innerHTML.split(':');\n  game.time = time[0] * 60 + time[1];\n  game.cellsCount = document.querySelector('.difficulty__current span').innerHTML.split('x')[0] ** 2;\n  game.cells = cells;\n\n  const emptyIndex = game.cells.findIndex(cell => cell.value === 0);\n  game.cells.splice(emptyIndex, 1, emptyCell);\n\n  localStorage.setItem('game', JSON.stringify(game));\n}\n\nfunction handleResultsShow(e) {\n\n}\n\nfunction handleAudioToggle(e) {\n  e.target.classList.toggle('active');\n  isAudio = !isAudio;\n  localStorage.setItem('isAudio', isAudio);\n}\n\nfunction createStatsBar() {\n  const statsBar = document.createElement('div');\n  statsBar.className = 'stats';\n\n  statsBar.innerHTML = `\n    <div class=\"stats__moves\">\n      Moves: <span>${moves ? moves : 0}</span>\n    </div>\n\n    <div class=\"stats__time\">\n      Time: <span>${time ? Math.floor(time / 60) + ':' + (time % 60 > 10 ? time % 60 : '0' + time % 60) : '0:0'}</span>\n    </div>\n  `;\n\n  startInterval(time);\n\n  return statsBar;\n}\n\nfunction startInterval(start) {\n  let seconds = start ?? 0;\n  interval = setInterval(() => {\n    const time = document.querySelector('.stats__time span');\n    seconds++;\n    time.innerHTML = `${Math.floor(seconds / 60)}:${seconds % 60 < 10 ? '0' + seconds % 60 : seconds % 60}`;\n  }, 1000);\n}\n\nfunction stopInterval() {\n  clearInterval(interval);\n  interval = null;\n}\n\nfunction createField(prevCells) {\n  cellSize = FIELD_WIDTH / Math.sqrt(cellsCount);\n  const field = document.createElement('div');\n  field.className = 'field';\n  field.style.width = FIELD_WIDTH + 'px';\n  field.style.height = FIELD_WIDTH + 'px';\n\n  for (let i = 0; i < cellsCount; i++) {\n    if (prevCells && prevCells[i]) {\n      if (prevCells[i].value === 0) continue;\n      const cell = createCell(i, prevCells[i].value, cellSize, prevCells[i], cellsCount);\n      field.append(cell);\n    } else {\n      const position = {\n        left: i % Math.sqrt(cellsCount),\n        top: (i - (i % Math.sqrt(cellsCount))) / Math.sqrt(cellsCount),\n      };\n      const value = numbers[i];\n      if (value === 0) continue;\n\n      const cell = createCell(i, value, cellSize, position, cellsCount);\n      field.append(cell);\n    }\n  }\n\n  return field;\n}\n\nfunction createCell(index, value, cellSize, position) {\n  const cell = document.createElement('div');\n  cell.className = 'cell';\n\n  cell.style.width = cellSize + 'px';\n  cell.style.height = cellSize + 'px';\n  cell.style.left = position.left * cellSize + 'px';\n  cell.style.top = position.top * cellSize + 'px';\n\n  cells.push({\n    left: position.left,\n    top: position.top,\n    value,\n    elem: cell\n  });\n\n  cell.innerHTML = value;\n\n  cell.addEventListener('click', (e) => moveCell(index));\n\n  return cell;\n};\n\nfunction createDifficultyPanel(size) {\n  size = size ? Math.sqrt(size) + 'x' + Math.sqrt(size) : '4x4';\n\n  const difficulty = document.createElement('div');\n  difficulty.className = 'difficulty';\n\n  const difficultyCurrent = document.createElement('div');\n  difficultyCurrent.className = 'difficulty__current';\n  difficultyCurrent.innerHTML = `Frame size: <span>${size}</span>`;\n\n  difficulty.append(difficultyCurrent);\n\n  const difficultyList = document.createElement('ul');\n  difficultyList.className = 'difficulty__list';\n\n  for (let i = 3; i < 9; i++) {\n    const difficultyItem = document.createElement('li');\n    difficultyItem.className = 'difficulty__item';\n\n    const difficultyLink = document.createElement('a');\n    difficultyLink.href = '#';\n    difficultyLink.className = 'difficulty__link';\n    difficultyLink.innerHTML = i + 'x' + i;\n\n    difficultyLink.addEventListener('click', handleSizeChange);\n\n    difficultyItem.append(difficultyLink);\n    difficultyList.append(difficultyItem);\n  }\n\n  const difficultyOther = document.createElement('div');\n  difficultyOther.className = 'difficulty__other';\n  difficultyOther.innerHTML = 'Other sizes: ';\n  difficultyOther.append(difficultyList);\n\n  difficulty.append(difficultyOther);\n\n  return difficulty;\n};\n\nfunction handleSizeChange(e) {\n  e.preventDefault();\n  cellsCount = e.target.innerHTML.split('x')[0] ** 2;\n  moves = 0;\n  time = 0;\n  localStorage.removeItem('game');\n  startGame();\n}\n\nfunction moveCell(index) {\n  const cell = cells[index];\n  const leftDiff = Math.abs(emptyCell.left - cell.left),\n    topDiff = Math.abs(emptyCell.top - cell.top);\n  if (leftDiff + topDiff > 1) return;\n\n  document.querySelector('.stats__moves span').innerHTML++;\n\n  if (isAudio) CLICK_AUDIO.play();\n\n  cell.elem.style.left = emptyCell.left * cellSize + 'px';\n  cell.elem.style.top = emptyCell.top * cellSize + 'px';\n\n  const currentLeft = cell.left,\n    currentTop = cell.top;\n\n  cell.left = emptyCell.left;\n  cell.top = emptyCell.top;\n\n  emptyCell.left = currentLeft;\n  emptyCell.top = currentTop;\n\n  const isFinished = cells.every(cell => {\n    if (cell === emptyCell) return true;\n\n    return emptyCell.top === 0 && emptyCell.left === 0\n      ? cell.value === cell.top * Math.sqrt(cellsCount) + cell.left\n      : cell.value === (cell.top * Math.sqrt(cellsCount) + cell.left) + 1;\n  });\n\n  if (isFinished) {\n    const moves = document.querySelector('.stats__moves span').innerHTML,\n      time = document.querySelector('.stats__time span').innerHTML;\n    document.querySelector('.field').innerHTML = `Hooray! You solved the puzzle in ${time} and ${moves} moves!`;\n    saveResults(moves, time);\n  }\n\n\n}\n\nfunction saveResults(moves, time) {\n  const prevResults = localStorage.getItem('results');\n  const results = prevResults ? JSON.parse(prevResults) : [];\n  results.push({ moves, time });\n  localStorage.setItem('results', JSON.stringify(results.sort((a, b) => b.moves - a.moves)));\n}\n\nfunction startGame() {\n  const game = JSON.parse(localStorage.getItem('game'));\n  let prevCells;\n  if (game) {\n    cellsCount = game?.cellsCount ?? 16;\n    moves = game?.moves ?? 0;\n    time = game?.time ?? 0;\n    emptyCell = game.cells.find(cell => cell.value === 0);\n    prevCells = game.cells;\n  } else {\n    emptyCell = {\n      top: 0,\n      left: 0,\n      value: 0\n    };\n    cells = [];\n    cells.push(emptyCell);\n  }\n\n  if (!cellsCount) cellsCount = 16;\n\n  numbers = [...new Array(cellsCount - 1).keys()]\n    .map(x => x + 1)\n    .sort((a, b) => Math.random() - 0.5);\n  numbers.unshift(0);\n\n  document.body.innerHTML = '';\n  stopInterval();\n\n  const btns = createBtns();\n  document.body.append(btns);\n\n  const statsBar = createStatsBar();\n  document.body.append(statsBar);\n\n  const field = createField(prevCells);\n  document.body.append(field);\n\n  const diffuclty = createDifficultyPanel(cellsCount);\n  document.body.append(diffuclty);\n}\n\nfunction init() {\n  startGame();\n}\n\ndocument.addEventListener('DOMContentLoaded', init);"]}