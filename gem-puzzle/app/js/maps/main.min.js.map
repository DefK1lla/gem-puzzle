{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/js/main.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","fieldOffset","cellSize","cellsCount","numbers","interval","moves","seconds","isWin","draggableIndex","FIELD_WIDTH","CLICK_AUDIO","Audio","isAudio","_JSON$parse","JSON","parse","localStorage","getItem","emptyCell","top","left","value","cells","isValidForSwap","coords","emptyCoords","matrix","diffX","Math","abs","x","diffY","y","randomSwap","number","findCoordsByNumber","validCoords","push","findValidCoords","swapCoords","swapNumber","swap","floor","random","createBtns","isStarted","arguments","undefined","btns","document","createElement","className","restartBtn","innerHTML","addEventListener","handleStart","saveBtn","disabled","handleSave","loadBtn","handleLoad","resultsBtn","handleResultsShow","audioLabel","toggleAudio","audioText","type","checked","append","handleAudioToggle","startGame","_game$cellsCount","_game$moves","_game$seconds","game","find","cell","prevCells","querySelector","pow","split","emptyIndex","findIndex","splice","setItem","stringify","confirm","stopInterval","body","table","results","concat","map","res","index","time","join","createResultsTable","target","createStatsBar","timeString","start","statsBar","hours","minutes","setInterval","clearInterval","handleDragOver","cellPos","dragPos","pageX","pageY","cellConditions","_getConditions","getConditions","xCondition","yCondition","preventDefault","createCell","position","draggable","style","width","height","elem","isCellNonInteractive","moveCell","handleCellClick","_getConditions2","targetTouches","handleTouchEnd","window","DocumentTouch","requestAnimationFrame","visibility","handleDragStart","_getConditions3","handleDragEnd","emptyPos","handleSizeChange","sqrt","isDrag","currentTime","play","transition","currentLeft","currentTop","isFinished","every","_moves","saveResults","_JSON$parse2","sort","b","_toConsumableArray","Array","keys","unshift","arr","elementsPerSubArray","k","arrToMatrix","flat","getNumbers","field","_cell","createField","getBoundingClientRect","diffuclty","size","difficulty","difficultyCurrent","difficultyList","difficultyItem","difficultyLink","href","difficultyOther","createDifficultyPanel"],"mappings":"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","file":"../main.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","const FIELD_WIDTH = 320;\nconst CLICK_AUDIO = new Audio('./audio/click.mp3');\n\nlet isAudio = JSON.parse(localStorage.getItem('isAudio')) ?? true;\n\nlet emptyCell = {\n  top: 0,\n  left: 0,\n  value: 0\n};\n\nlet cells = [];\ncells.push(emptyCell);\n\nlet fieldOffset;\nlet cellSize;\nlet cellsCount;\nlet numbers;\nlet interval;\nlet moves;\nlet seconds;\nlet isWin;\nlet draggableIndex;\n\nfunction isTouch() { return ('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch; }\n\nfunction arrToMatrix(arr, elementsPerSubArray) {\n  let matrix = [], i, k;\n  for (i = 0, k = -1; i < arr.length; i++) {\n    if (i % elementsPerSubArray === 0) {\n      k++;\n      matrix[k] = [];\n    }\n    matrix[k].push(arr[i]);\n  }\n  return matrix;\n}\n\nfunction findCoordsByNumber(number, matrix) {\n  for (let y = 0; y < matrix.length; y++) {\n    for (let x = 0; x < matrix[y].length; x++) {\n      if (matrix[y][x] === number) return { y, x };\n    }\n  }\n  return null;\n}\n\nfunction isValidForSwap(coords, emptyCoords, matrix) {\n  const diffX = Math.abs(coords.x - emptyCoords.x);\n  const diffY = Math.abs(coords.y - emptyCoords.y);\n  return (diffX === 1 || diffY === 1) && (coords.x === emptyCoords.x || coords.y === emptyCoords.y);\n}\n\nfunction findValidCoords(emptyCoords, matrix) {\n  const validCoords = [];\n  for (let y = 0; y < matrix.length; y++) {\n    for (let x = 0; x < matrix[y].length; x++) {\n      const coords = { y, x };\n      const isValid = isValidForSwap(coords, emptyCoords, matrix);\n      if (isValid) validCoords.push(coords);\n    }\n  }\n  return validCoords;\n}\n\nfunction swap(swapCoords, emptyCoords, matrix) {\n  const swapNumber = matrix[swapCoords.x][swapCoords.y];\n  matrix[swapCoords.x][swapCoords.y] = matrix[emptyCoords.y][emptyCoords.x];\n  matrix[emptyCoords.y][emptyCoords.x] = swapNumber;\n}\n\nfunction randomSwap(matrix) {\n  const emptyCoords = findCoordsByNumber(0, matrix);\n  const validCoords = findValidCoords(emptyCoords, matrix);\n  const swapCoords = validCoords[Math.floor(Math.random() * validCoords.length)];\n  swap(swapCoords, emptyCoords, matrix);\n  return matrix;\n}\n\nfunction getNumbers(cellsCount) {\n  let numbers = [...new Array(cellsCount - 1).keys()]\n    .map(x => x + 1);\n  if (Math.random() > 0.5) numbers.push(0);\n  else numbers.unshift(0);\n  numbers = arrToMatrix(numbers, Math.sqrt(cellsCount));\n  for (let i = 0; i < cellsCount * 10; i++) numbers = randomSwap(numbers);\n  return numbers.flat();\n}\n\nfunction createResultsTable() {\n  const table = document.createElement('table');\n  const results = JSON.parse(localStorage.getItem('results'));\n\n  table.innerHTML = `\n    <tr>\n      <th>Position</th>\n      <th>Moves</th>\n      <th>Time</th>\n    </tr>\n\n    ${!results\n      ? `\n        <tr>\n          <td colspan=\"3\">\n            <p class=\"results-placeholder\">You have never won</p>\n          </td>\n        </tr>\n      `\n      : results.map((res, index) => (`\n        <tr>\n          <td>${index + 1}</td>\n          <td>${res.moves}</td>\n          <td>${res.time}</td>\n        </tr>\n      `)).join(' ')\n    }\n  `;\n\n  return table;\n}\n\nfunction createBtns(isStarted = true) {\n  const btns = document.createElement('div');\n  btns.className = 'btns';\n\n  const restartBtn = document.createElement('button');\n  restartBtn.className = 'btn';\n  restartBtn.innerHTML = 'Start';\n  restartBtn.addEventListener('click', handleStart);\n\n  const saveBtn = document.createElement('button');\n  saveBtn.className = 'btn';\n  saveBtn.innerHTML = 'Save';\n  saveBtn.disabled = !isStarted;\n  saveBtn.addEventListener('click', handleSave);\n\n  const loadBtn = document.createElement('button');\n  loadBtn.className = 'btn';\n  loadBtn.innerHTML = 'Load';\n  loadBtn.addEventListener('click', handleLoad);\n\n  const resultsBtn = document.createElement('button');\n  resultsBtn.className = 'btn';\n  resultsBtn.innerHTML = 'Results';\n  resultsBtn.addEventListener('click', handleResultsShow);\n\n  const audioLabel = document.createElement('label');\n  const toggleAudio = document.createElement('input');\n  const audioText = document.createElement('span');\n\n  audioText.innerHTML = 'Sound';\n  toggleAudio.type = 'checkbox';\n  toggleAudio.checked = isAudio;\n  audioLabel.append(toggleAudio, audioText);\n  toggleAudio.addEventListener('change', handleAudioToggle);\n\n  btns.append(restartBtn, saveBtn, loadBtn, resultsBtn, audioLabel);\n\n  return btns;\n}\n\nfunction handleStart(e) {\n  moves = 0;\n  seconds = 0;\n  startGame();\n}\n\nfunction handleLoad(e) {\n  const game = JSON.parse(localStorage.getItem('game'));\n  if (!game) return;\n  cellsCount = game?.cellsCount ?? 16;\n  moves = game?.moves ?? 0;\n  seconds = game?.seconds ?? 0;\n  emptyCell = game.cells.find(cell => cell.value === 0);\n  const prevCells = game.cells;\n  cells = [];\n  startGame(prevCells);\n}\n\nfunction handleSave(e) {\n  const game = {};\n\n  game.moves = document.querySelector('.stats__moves span').innerHTML;\n  game.seconds = seconds;\n  game.cellsCount = document.querySelector('.difficulty__current span').innerHTML.split('x')[0] ** 2;\n  game.cells = cells;\n\n  const emptyIndex = game.cells.findIndex(cell => cell.value === 0);\n  game.cells.splice(emptyIndex, 1, emptyCell);\n\n  localStorage.setItem('game', JSON.stringify(game));\n}\n\nfunction handleResultsShow(e) {\n  if (!isWin) {\n    const isSave = confirm('Save the game?');\n    if (isSave) handleSave(e);\n  }\n\n  stopInterval();\n  document.body.innerHTML = '';\n\n  const btns = createBtns(false);\n  document.body.append(btns);\n\n  const table = createResultsTable();\n  document.body.append(table);\n}\n\nfunction handleAudioToggle(e) {\n  isAudio = e.target.checked;\n  localStorage.setItem('isAudio', isAudio);\n}\n\nfunction createStatsBar() {\n  const statsBar = document.createElement('div');\n  statsBar.className = 'stats';\n\n  let timeString;\n\n  if (seconds) {\n    const hours = Math.floor((seconds / 60 / 60) % 24),\n      minutes = Math.floor((seconds / 60) % 60);\n\n    timeString = (hours ? hours + ':' : '') + (minutes ? minutes + ':' : '0:') + seconds % 60;\n  }\n\n  statsBar.innerHTML = `\n    <div class=\"stats__moves\">\n      Moves: <span>${moves ? moves : 0}</span>\n    </div>\n\n    <div class=\"stats__time\">\n      Time: <span>${seconds ? timeString : '0:0'}</span>\n    </div>\n  `;\n\n  startInterval(seconds);\n\n  return statsBar;\n}\n\nfunction startInterval(start) {\n  seconds = start ?? 0;\n  interval = setInterval(() => {\n    const time = document.querySelector('.stats__time span');\n    seconds++;\n    const hours = Math.floor((seconds / 60 / 60) % 24),\n      minutes = Math.floor((seconds / 60) % 60);\n    time.innerHTML = (hours ? hours + ':' : '') + (minutes ? minutes + ':' : '0:') + seconds % 60;\n  }, 1000);\n}\n\nfunction stopInterval() {\n  clearInterval(interval);\n  interval = null;\n}\n\nfunction createField(prevCells) {\n  cellSize = FIELD_WIDTH / Math.sqrt(cellsCount);\n  const field = document.createElement('div');\n  field.className = 'field';\n  field.style.width = FIELD_WIDTH + 'px';\n  field.style.height = FIELD_WIDTH + 'px';\n\n  for (let i = 0; i < cellsCount; i++) {\n    if (prevCells && prevCells[i]) {\n      if (prevCells[i].value === 0) continue;\n      const cell = createCell(i, prevCells[i].value, cellSize, prevCells[i], cellsCount);\n      field.append(cell);\n    } else {\n      const position = {\n        left: i % Math.sqrt(cellsCount),\n        top: (i - (i % Math.sqrt(cellsCount))) / Math.sqrt(cellsCount),\n      };\n      const value = numbers[i];\n      if (value === 0) {\n        emptyCell = {\n          left: position.left,\n          top: position.top,\n          value\n        }\n        cells.push(emptyCell);\n        continue;\n      }\n      const cell = createCell(i, value, cellSize, position, cellsCount);\n      field.append(cell);\n    }\n  }\n  field.addEventListener('dragover', handleDragOver);\n  return field;\n}\n\nfunction handleDragOver(e) {\n  const cell = cells[draggableIndex];\n  const cellPos = {\n    left: cell.left * cellSize,\n    top: cell.top * cellSize\n  };\n  const dragPos = {\n    left: e.pageX - fieldOffset.left,\n    top: e.pageY - fieldOffset.top\n  }\n  const cellConditions = (dragPos.left >= cellPos.left && dragPos.left <= cellPos.left + cellSize) &&\n    (dragPos.top >= cellPos.top && dragPos.top <= cellPos.top + cellSize);\n  const { xCondition, yCondition } = getConditions(e);\n  if ((xCondition && yCondition) || cellConditions) e.preventDefault();\n}\n\nfunction createCell(index, value, cellSize, position) {\n  const cell = document.createElement('div');\n  cell.className = 'cell';\n  cell.draggable = true;\n\n  cell.style.width = cellSize + 'px';\n  cell.style.height = cellSize + 'px';\n  cell.style.left = position.left * cellSize + 'px';\n  cell.style.top = position.top * cellSize + 'px';\n\n  cells.push({\n    left: position.left,\n    top: position.top,\n    value,\n    elem: cell\n  });\n\n  cell.innerHTML = value;\n\n  cell.addEventListener('click', (e) => handleCellClick(e, index));\n  cell.addEventListener('touchmove', (e) => handleTouchEnd(e, index));\n  cell.addEventListener('dragstart', (e) => handleDragStart(e, index));\n  cell.addEventListener('dragend', (e) => handleDragEnd(e, index));\n\n\n  return cell;\n};\n\nfunction getConditions(e) {\n  const emptyPos = {\n    left: emptyCell.left * cellSize,\n    top: emptyCell.top * cellSize\n  };\n  const dragPos = {\n    left: e.pageX - fieldOffset.left,\n    top: e.pageY - fieldOffset.top\n  }\n  const xCondition = dragPos.left >= emptyPos.left && dragPos.left <= emptyPos.left + cellSize,\n    yCondition = dragPos.top >= emptyPos.top && dragPos.top <= emptyPos.top + cellSize;\n\n  return { xCondition, yCondition };\n}\n\nfunction handleTouchEnd(e, index) {\n  e.preventDefault();\n  const cell = cells[index];\n  if (isCellNonInteractive(cell)) return e.preventDefault();\n  const touch = e.targetTouches[0];\n  const { xCondition, yCondition } = getConditions(touch);\n  if (xCondition && yCondition) moveCell(index);\n}\n\nfunction handleDragStart(e, index) {\n  draggableIndex = index;\n  const cell = cells[index];\n  if (isCellNonInteractive(cell)) return e.preventDefault();\n  if (!isTouch()) requestAnimationFrame(() => cell.elem.style.visibility = 'hidden', 0);\n}\n\nfunction handleDragEnd(e, index) {\n  const cell = cells[index];\n  const { xCondition, yCondition } = getConditions(e);\n\n  if (xCondition && yCondition) moveCell(index, true);\n  requestAnimationFrame(() => cell.elem.style.visibility = 'visible', 0);\n}\n\nfunction isCellNonInteractive(cell) {\n  const leftDiff = Math.abs(emptyCell.left - cell.left),\n    topDiff = Math.abs(emptyCell.top - cell.top);\n  return leftDiff + topDiff > 1;\n}\n\nfunction handleCellClick(e, index) {\n  const cell = cells[index];\n  if (isCellNonInteractive(cell)) return;\n  moveCell(index);\n}\n\nfunction createDifficultyPanel(size) {\n  size = size ? Math.sqrt(size) + 'x' + Math.sqrt(size) : '4x4';\n\n  const difficulty = document.createElement('div');\n  difficulty.className = 'difficulty';\n\n  const difficultyCurrent = document.createElement('div');\n  difficultyCurrent.className = 'difficulty__current';\n  difficultyCurrent.innerHTML = `Frame size: <span>${size}</span>`;\n\n  difficulty.append(difficultyCurrent);\n\n  const difficultyList = document.createElement('ul');\n  difficultyList.className = 'difficulty__list';\n\n  for (let i = 3; i < 9; i++) {\n    const difficultyItem = document.createElement('li');\n    difficultyItem.className = 'difficulty__item';\n\n    const difficultyLink = document.createElement('a');\n    difficultyLink.href = '#';\n    difficultyLink.className = 'difficulty__link';\n    difficultyLink.innerHTML = i + 'x' + i;\n\n    difficultyLink.addEventListener('click', handleSizeChange);\n\n    difficultyItem.append(difficultyLink);\n    difficultyList.append(difficultyItem);\n  }\n\n  const difficultyOther = document.createElement('div');\n  difficultyOther.className = 'difficulty__other';\n  difficultyOther.innerHTML = 'Other sizes: ';\n  difficultyOther.append(difficultyList);\n\n  difficulty.append(difficultyOther);\n\n  return difficulty;\n};\n\nfunction handleSizeChange(e) {\n  e.preventDefault();\n  cellsCount = e.target.innerHTML.split('x')[0] ** 2;\n  moves = 0;\n  seconds = 0;\n  cellSize = FIELD_WIDTH / Math.sqrt(cellsCount);\n  startGame();\n}\n\nfunction moveCell(index, isDrag = false) {\n  const cell = cells[index];\n\n  document.querySelector('.stats__moves span').innerHTML++;\n\n  CLICK_AUDIO.currentTime = 0;\n  if (isAudio) CLICK_AUDIO.play();\n\n  if (isDrag) cell.elem.style.transition = 'all 0s';\n  else cell.elem.style.transition = 'all 0.3s linear';\n\n  cell.elem.style.left = emptyCell.left * cellSize + 'px';\n  cell.elem.style.top = emptyCell.top * cellSize + 'px';\n\n  const currentLeft = cell.left,\n    currentTop = cell.top;\n\n  cell.left = emptyCell.left;\n  cell.top = emptyCell.top;\n\n  emptyCell.left = currentLeft;\n  emptyCell.top = currentTop;\n\n  const isFinished = cells.every(cell => {\n    isWin = true;\n    if (cell === emptyCell) return true;\n\n    return emptyCell.top === 0 && emptyCell.left === 0\n      ? cell.value === cell.top * Math.sqrt(cellsCount) + cell.left\n      : cell.value === (cell.top * Math.sqrt(cellsCount) + cell.left) + 1;\n  });\n\n  if (isFinished) {\n    stopInterval();\n    const moves = document.querySelector('.stats__moves span').innerHTML,\n      time = document.querySelector('.stats__time span').innerHTML;\n    document.querySelector('.field').innerHTML = `Hooray! You solved the puzzle in ${time} and ${moves} moves!`;\n    saveResults(moves, time);\n  }\n}\n\nfunction saveResults(moves, time) {\n  const results = JSON.parse(localStorage.getItem('results')) ?? [];\n  results.push({ moves, time });\n  localStorage.setItem('results', JSON.stringify(results.sort((a, b) => a.moves - b.moves)));\n}\n\nfunction startGame(prevCells) {\n  isWin = false;\n  if (!prevCells) emptyCell = { top: 0, left: 0, value: 0 };\n\n  cells = [];\n\n  if (!cellsCount) cellsCount = 16;\n\n  numbers = getNumbers(cellsCount);\n\n  document.body.innerHTML = '';\n  stopInterval();\n\n  const btns = createBtns();\n  document.body.append(btns);\n\n  const statsBar = createStatsBar();\n  document.body.append(statsBar);\n\n  const field = createField(prevCells);\n  document.body.append(field);\n  fieldOffset = {\n    left: field.getBoundingClientRect().left,\n    top: field.getBoundingClientRect().top\n  };\n\n  const diffuclty = createDifficultyPanel(cellsCount);\n  document.body.append(diffuclty);\n}\n\nfunction init() {\n  startGame();\n}\n\ndocument.addEventListener('DOMContentLoaded', init);"]}