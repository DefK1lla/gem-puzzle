{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/js/main.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","fieldOffset","cellSize","cellsCount","numbers","interval","moves","seconds","isWin","draggableIndex","FIELD_WIDTH","CLICK_AUDIO","Audio","isAudio","_JSON$parse","JSON","parse","localStorage","getItem","emptyCell","top","left","value","cells","createBtns","isStarted","arguments","undefined","btns","document","createElement","className","restartBtn","innerHTML","addEventListener","handleStart","saveBtn","disabled","handleSave","loadBtn","handleLoad","resultsBtn","handleResultsShow","audioLabel","toggleAudio","audioText","type","checked","append","handleAudioToggle","startGame","_game$cellsCount","_game$moves","_game$seconds","game","find","cell","prevCells","querySelector","Math","pow","split","emptyIndex","findIndex","splice","setItem","stringify","confirm","stopInterval","body","table","results","concat","map","res","index","time","join","createResultsTable","target","createStatsBar","timeString","start","statsBar","hours","floor","minutes","setInterval","clearInterval","handleDragOver","cellPos","dragPos","pageX","pageY","cellConditions","_getConditions","getConditions","xCondition","yCondition","preventDefault","createCell","position","draggable","style","width","height","push","elem","isCellNonInteractive","moveCell","handleCellClick","test","navigator","userAgent","requestAnimationFrame","visibility","handleDragStart","_getConditions3","handleDragEnd","_getConditions2","targetTouches","handleTouchEnd","emptyPos","abs","handleSizeChange","sqrt","isDrag","play","transition","currentLeft","currentTop","isFinished","every","_moves","saveResults","_JSON$parse2","console","log","sort","b","_toConsumableArray","Array","keys","random","getNumbers","field","_cell","createField","getBoundingClientRect","diffuclty","size","difficulty","difficultyCurrent","difficultyList","difficultyItem","difficultyLink","href","difficultyOther","createDifficultyPanel"],"mappings":"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","file":"../main.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","const FIELD_WIDTH = 320;\nconst CLICK_AUDIO = new Audio('./audio/click.mp3');\n\nlet isAudio = JSON.parse(localStorage.getItem('isAudio')) ?? true;\n\nlet emptyCell = {\n  top: 0,\n  left: 0,\n  value: 0\n};\n\nlet cells = [];\ncells.push(emptyCell);\n\nlet fieldOffset;\nlet cellSize;\nlet cellsCount;\nlet numbers;\nlet interval;\nlet moves;\nlet seconds;\nlet isWin;\nlet draggableIndex;\n\nfunction getNumbers(cellsCount) {\n  const numbers = [...new Array(cellsCount).keys()]\n    .sort((a, b) => Math.random() - 0.5);\n  return numbers;\n}\n\nfunction createResultsTable() {\n  const table = document.createElement('table');\n  const results = JSON.parse(localStorage.getItem('results'));\n\n  table.innerHTML = `\n    <tr>\n      <th>Position</th>\n      <th>Moves</th>\n      <th>Time</th>\n    </tr>\n\n    ${!results\n      ? `\n        <tr>\n          <td colspan=\"3\">\n            <p class=\"results-placeholder\">You have never won</p>\n          </td>\n        </tr>\n      `\n      : results.map((res, index) => (`\n        <tr>\n          <td>${index + 1}</td>\n          <td>${res.moves}</td>\n          <td>${res.time}</td>\n        </tr>\n      `)).join(' ')\n    }\n  `;\n\n  return table;\n}\n\nfunction createBtns(isStarted = true) {\n  const btns = document.createElement('div');\n  btns.className = 'btns';\n\n  const restartBtn = document.createElement('button');\n  restartBtn.className = 'btn';\n  restartBtn.innerHTML = 'Start';\n  restartBtn.addEventListener('click', handleStart);\n\n  const saveBtn = document.createElement('button');\n  saveBtn.className = 'btn';\n  saveBtn.innerHTML = 'Save';\n  saveBtn.disabled = !isStarted;\n  saveBtn.addEventListener('click', handleSave);\n\n  const loadBtn = document.createElement('button');\n  loadBtn.className = 'btn';\n  loadBtn.innerHTML = 'Load';\n  loadBtn.addEventListener('click', handleLoad);\n\n  const resultsBtn = document.createElement('button');\n  resultsBtn.className = 'btn';\n  resultsBtn.innerHTML = 'Results';\n  resultsBtn.addEventListener('click', handleResultsShow);\n\n  const audioLabel = document.createElement('label');\n  const toggleAudio = document.createElement('input');\n  const audioText = document.createElement('span');\n\n  audioText.innerHTML = 'Sound';\n  toggleAudio.type = 'checkbox';\n  toggleAudio.checked = isAudio;\n  audioLabel.append(toggleAudio, audioText);\n  toggleAudio.addEventListener('change', handleAudioToggle);\n\n  btns.append(restartBtn, saveBtn, loadBtn, resultsBtn, audioLabel);\n\n  return btns;\n}\n\nfunction handleStart(e) {\n  moves = 0;\n  seconds = 0;\n  startGame();\n}\n\nfunction handleLoad(e) {\n  const game = JSON.parse(localStorage.getItem('game'));\n  if (!game) return;\n  cellsCount = game?.cellsCount ?? 16;\n  moves = game?.moves ?? 0;\n  seconds = game?.seconds ?? 0;\n  emptyCell = game.cells.find(cell => cell.value === 0);\n  const prevCells = game.cells;\n  cells = [];\n  startGame(prevCells);\n}\n\nfunction handleSave(e) {\n  const game = {};\n\n  game.moves = document.querySelector('.stats__moves span').innerHTML;\n  game.seconds = seconds;\n  game.cellsCount = document.querySelector('.difficulty__current span').innerHTML.split('x')[0] ** 2;\n  game.cells = cells;\n\n  const emptyIndex = game.cells.findIndex(cell => cell.value === 0);\n  game.cells.splice(emptyIndex, 1, emptyCell);\n\n  localStorage.setItem('game', JSON.stringify(game));\n}\n\nfunction handleResultsShow(e) {\n  if (!isWin) {\n    const isSave = confirm('Save the game?');\n    if (isSave) handleSave(e);\n  }\n\n  stopInterval();\n  document.body.innerHTML = '';\n\n  const btns = createBtns(false);\n  document.body.append(btns);\n\n  const table = createResultsTable();\n  document.body.append(table);\n}\n\nfunction handleAudioToggle(e) {\n  isAudio = e.target.checked;\n  localStorage.setItem('isAudio', isAudio);\n}\n\nfunction createStatsBar() {\n  const statsBar = document.createElement('div');\n  statsBar.className = 'stats';\n\n  let timeString;\n\n  if (seconds) {\n    const hours = Math.floor((seconds / 60 / 60) % 24),\n      minutes = Math.floor((seconds / 60) % 60);\n\n    timeString = (hours ? hours + ':' : '') + (minutes ? minutes + ':' : '0:') + seconds % 60;\n  }\n\n  statsBar.innerHTML = `\n    <div class=\"stats__moves\">\n      Moves: <span>${moves ? moves : 0}</span>\n    </div>\n\n    <div class=\"stats__time\">\n      Time: <span>${seconds ? timeString : '0:0'}</span>\n    </div>\n  `;\n\n  startInterval(seconds);\n\n  return statsBar;\n}\n\nfunction startInterval(start) {\n  seconds = start ?? 0;\n  interval = setInterval(() => {\n    const time = document.querySelector('.stats__time span');\n    seconds++;\n    const hours = Math.floor((seconds / 60 / 60) % 24),\n      minutes = Math.floor((seconds / 60) % 60);\n    time.innerHTML = (hours ? hours + ':' : '') + (minutes ? minutes + ':' : '0:') + seconds % 60;\n  }, 1000);\n}\n\nfunction stopInterval() {\n  clearInterval(interval);\n  interval = null;\n}\n\nfunction createField(prevCells) {\n  cellSize = FIELD_WIDTH / Math.sqrt(cellsCount);\n  const field = document.createElement('div');\n  field.className = 'field';\n  field.style.width = FIELD_WIDTH + 'px';\n  field.style.height = FIELD_WIDTH + 'px';\n\n  for (let i = 0; i < cellsCount; i++) {\n    if (prevCells && prevCells[i]) {\n      if (prevCells[i].value === 0) continue;\n      const cell = createCell(i, prevCells[i].value, cellSize, prevCells[i], cellsCount);\n      field.append(cell);\n    } else {\n      const position = {\n        left: i % Math.sqrt(cellsCount),\n        top: (i - (i % Math.sqrt(cellsCount))) / Math.sqrt(cellsCount),\n      };\n      const value = numbers[i];\n      if (value === 0) {\n        emptyCell = {\n          left: position.left,\n          top: position.top,\n          value\n        }\n        cells.push(emptyCell);\n        continue;\n      }\n      const cell = createCell(i, value, cellSize, position, cellsCount);\n      field.append(cell);\n    }\n  }\n  field.addEventListener('dragover', handleDragOver);\n  return field;\n}\n\nfunction handleDragOver(e) {\n  const cell = cells[draggableIndex];\n  const cellPos = {\n    left: cell.left * cellSize,\n    top: cell.top * cellSize\n  };\n  const dragPos = {\n    left: e.pageX - fieldOffset.left,\n    top: e.pageY - fieldOffset.top\n  }\n  const cellConditions = (dragPos.left >= cellPos.left && dragPos.left <= cellPos.left + cellSize) &&\n    (dragPos.top >= cellPos.top && dragPos.top <= cellPos.top + cellSize);\n  const { xCondition, yCondition } = getConditions(e);\n  if ((xCondition && yCondition) || cellConditions) e.preventDefault();\n}\n\nfunction createCell(index, value, cellSize, position) {\n  const cell = document.createElement('div');\n  cell.className = 'cell';\n  cell.draggable = true;\n\n  cell.style.width = cellSize + 'px';\n  cell.style.height = cellSize + 'px';\n  cell.style.left = position.left * cellSize + 'px';\n  cell.style.top = position.top * cellSize + 'px';\n\n  cells.push({\n    left: position.left,\n    top: position.top,\n    value,\n    elem: cell\n  });\n\n  cell.innerHTML = value;\n\n  cell.addEventListener('click', (e) => handleCellClick(e, index));\n  cell.addEventListener('dragstart', (e) => handleDragStart(e, index));\n  cell.addEventListener('dragend', (e) => handleDragEnd(e, index));\n  cell.addEventListener('touchmove', (e) => handleTouchEnd(e, index));\n\n\n  return cell;\n};\n\nfunction getConditions(e) {\n  const emptyPos = {\n    left: emptyCell.left * cellSize,\n    top: emptyCell.top * cellSize\n  };\n  const dragPos = {\n    left: e.pageX - fieldOffset.left,\n    top: e.pageY - fieldOffset.top\n  }\n  const xCondition = dragPos.left >= emptyPos.left && dragPos.left <= emptyPos.left + cellSize,\n    yCondition = dragPos.top >= emptyPos.top && dragPos.top <= emptyPos.top + cellSize;\n\n  return { xCondition, yCondition };\n}\n\nfunction handleTouchEnd(e, index) {\n  e.preventDefault();\n\n  const cell = cells[index];\n  if (isCellNonInteractive(cell)) return e.preventDefault();\n  const touch = e.targetTouches[0];\n  const { xCondition, yCondition } = getConditions(touch);\n  if (xCondition && yCondition) moveCell(index);\n}\n\nfunction handleDragStart(e, index) {\n  draggableIndex = index;\n  const cell = cells[index];\n  if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) return;\n  if (isCellNonInteractive(cell)) return e.preventDefault();\n  requestAnimationFrame(() => cell.elem.style.visibility = 'hidden', 0);\n}\n\nfunction handleDragEnd(e, index) {\n  const cell = cells[index];\n  const { xCondition, yCondition } = getConditions(e);\n\n  if (xCondition && yCondition) moveCell(index, true);\n  requestAnimationFrame(() => cell.elem.style.visibility = 'visible', 0);\n}\n\nfunction isCellNonInteractive(cell) {\n  const leftDiff = Math.abs(emptyCell.left - cell.left),\n    topDiff = Math.abs(emptyCell.top - cell.top);\n  return leftDiff + topDiff > 1;\n}\n\nfunction handleCellClick(e, index) {\n  const cell = cells[index];\n  if (isCellNonInteractive(cell)) return;\n  moveCell(index);\n}\n\nfunction createDifficultyPanel(size) {\n  size = size ? Math.sqrt(size) + 'x' + Math.sqrt(size) : '4x4';\n\n  const difficulty = document.createElement('div');\n  difficulty.className = 'difficulty';\n\n  const difficultyCurrent = document.createElement('div');\n  difficultyCurrent.className = 'difficulty__current';\n  difficultyCurrent.innerHTML = `Frame size: <span>${size}</span>`;\n\n  difficulty.append(difficultyCurrent);\n\n  const difficultyList = document.createElement('ul');\n  difficultyList.className = 'difficulty__list';\n\n  for (let i = 3; i < 9; i++) {\n    const difficultyItem = document.createElement('li');\n    difficultyItem.className = 'difficulty__item';\n\n    const difficultyLink = document.createElement('a');\n    difficultyLink.href = '#';\n    difficultyLink.className = 'difficulty__link';\n    difficultyLink.innerHTML = i + 'x' + i;\n\n    difficultyLink.addEventListener('click', handleSizeChange);\n\n    difficultyItem.append(difficultyLink);\n    difficultyList.append(difficultyItem);\n  }\n\n  const difficultyOther = document.createElement('div');\n  difficultyOther.className = 'difficulty__other';\n  difficultyOther.innerHTML = 'Other sizes: ';\n  difficultyOther.append(difficultyList);\n\n  difficulty.append(difficultyOther);\n\n  return difficulty;\n};\n\nfunction handleSizeChange(e) {\n  e.preventDefault();\n  cellsCount = e.target.innerHTML.split('x')[0] ** 2;\n  moves = 0;\n  seconds = 0;\n  cellSize = FIELD_WIDTH / Math.sqrt(cellsCount);\n  startGame();\n}\n\nfunction moveCell(index, isDrag = false) {\n  const cell = cells[index];\n\n  document.querySelector('.stats__moves span').innerHTML++;\n\n  if (isAudio) CLICK_AUDIO.play();\n\n  if (isDrag) cell.elem.style.transition = 'all 0s';\n  cell.elem.style.left = emptyCell.left * cellSize + 'px';\n  cell.elem.style.top = emptyCell.top * cellSize + 'px';\n  cell.elem.style.transition = 'transition: top 0.3s linear, left 0.3s linear';\n\n  const currentLeft = cell.left,\n    currentTop = cell.top;\n\n  cell.left = emptyCell.left;\n  cell.top = emptyCell.top;\n\n  emptyCell.left = currentLeft;\n  emptyCell.top = currentTop;\n\n  const isFinished = cells.every(cell => {\n    isWin = true;\n    if (cell === emptyCell) return true;\n\n    return emptyCell.top === 0 && emptyCell.left === 0\n      ? cell.value === cell.top * Math.sqrt(cellsCount) + cell.left\n      : cell.value === (cell.top * Math.sqrt(cellsCount) + cell.left) + 1;\n  });\n\n  if (isFinished) {\n    stopInterval();\n    const moves = document.querySelector('.stats__moves span').innerHTML,\n      time = document.querySelector('.stats__time span').innerHTML;\n    document.querySelector('.field').innerHTML = `Hooray! You solved the puzzle in ${time} and ${moves} moves!`;\n    saveResults(moves, time);\n  }\n}\n\nfunction saveResults(moves, time) {\n  const results = JSON.parse(localStorage.getItem('results')) ?? [];\n  results.push({ moves, time });\n  console.log(results)\n  localStorage.setItem('results', JSON.stringify(results.sort((a, b) => a.moves - b.moves)));\n}\n\nfunction startGame(prevCells) {\n  isWin = false;\n  if (!prevCells) emptyCell = { top: 0, left: 0, value: 0 };\n\n  cells = [];\n\n  if (!cellsCount) cellsCount = 16;\n\n  numbers = getNumbers(cellsCount);\n\n  document.body.innerHTML = '';\n  stopInterval();\n\n  const btns = createBtns();\n  document.body.append(btns);\n\n  const statsBar = createStatsBar();\n  document.body.append(statsBar);\n\n  const field = createField(prevCells);\n  document.body.append(field);\n  fieldOffset = {\n    left: field.getBoundingClientRect().left,\n    top: field.getBoundingClientRect().top\n  };\n\n  const diffuclty = createDifficultyPanel(cellsCount);\n  document.body.append(diffuclty);\n}\n\nfunction init() {\n  startGame();\n}\n\ndocument.addEventListener('DOMContentLoaded', init);"]}