{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/js/main.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","alert","fieldOffset","cellSize","cellsCount","numbers","interval","moves","time","CLICK_AUDIO","Audio","isAudio","_JSON$parse","JSON","parse","localStorage","getItem","emptyCell","top","left","value","cells","createBtns","isStarted","arguments","undefined","btns","document","createElement","className","restartBtn","innerHTML","addEventListener","handleStart","saveBtn","disabled","handleSave","resultsBtn","handleResultsShow","toggleAudio","handleAudioToggle","append","removeItem","startGame","game","querySelector","split","Math","pow","emptyIndex","findIndex","cell","splice","setItem","stringify","stopInterval","body","table","results","concat","map","res","index","createResultsTable","target","classList","toggle","createStatsBar","start","seconds","statsBar","floor","setInterval","clearInterval","createCell","position","draggable","style","width","height","push","elem","isCellInteractive","moveCell","handleCellClick","preventDefault","requestAnimationFrame","visibility","handleDragStart","handleDragEnd","emptyPos","dragPos","pageX","pageY","abs","handleSizeChange","play","currentLeft","currentTop","isFinished","every","sqrt","_moves","_time","prevResults","sort","b","slice","saveResults","prevCells","_game$cellsCount","_game$moves","_game$time","find","_toConsumableArray","Array","keys","x","random","unshift","field","FIELD_WIDTH","_cell","ondragover","createField","getBoundingClientRect","diffuclty","size","difficulty","difficultyCurrent","difficultyList","difficultyItem","difficultyLink","href","difficultyOther","createDifficultyPanel"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,KAAAJ,EAAAI,GAAA,KAAAE,EAAA,mBAAAC,iBAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,MAAAI,EAAA,OAAAA,EAAAJ,GAAA,OAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,WAAAK,EAAAE,KAAA,mBAAAF,CAAA,KAAAG,EAAAX,EAAAG,GAAA,CAAAS,QAAA,IAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,SAAA,SAAAd,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,MAAA,GAAAa,IAAAC,QAAAd,EAAAC,EAAAC,EAAAC,EAAA,QAAAD,EAAAG,GAAAS,OAAA,SAAAL,EAAA,mBAAAD,iBAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,CAAA,eAAAI,EAAAS,EAAAH,G,gxBCAAI,MAAM,8GAEN,IAcIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAnBEC,EAAc,IAAIC,MAAM,qBAE1BC,EAAO,QAAAC,EAAGC,KAAKC,MAAMC,aAAaC,QAAQ,mBAAnC,IAAAJ,KAEPK,EAAY,CACdC,IAAK,EACLC,KAAM,EACNC,MAAO,GAGLC,EAAQ,GA4CZ,SAASC,IAA6B,IAAlBC,IAAkBC,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,KAAAA,UAAA,GAC9BE,EAAOC,SAASC,cAAc,OACpCF,EAAKG,UAAY,OAEjB,IAAMC,EAAaH,SAASC,cAAc,UAC1CE,EAAWD,UAAY,MACvBC,EAAWC,UAAY,QACvBD,EAAWE,iBAAiB,QAASC,GAErC,IAAMC,EAAUP,SAASC,cAAc,UACvCM,EAAQL,UAAY,MACpBK,EAAQH,UAAY,OACpBG,EAAQC,UAAYZ,EACpBW,EAAQF,iBAAiB,QAASI,GAElC,IAAMC,EAAaV,SAASC,cAAc,UAC1CS,EAAWR,UAAY,MACvBQ,EAAWN,UAAY,UACvBM,EAAWL,iBAAiB,QAASM,GAErC,IAAMC,EAAcZ,SAASC,cAAc,UAO3C,OANAW,EAAYV,UAAYlB,EAAU,aAAe,MACjD4B,EAAYR,UAAY,QACxBQ,EAAYP,iBAAiB,QAASQ,GAEtCd,EAAKe,OAAOX,EAAYI,EAASG,EAAYE,GAEtCb,CACR,CAED,SAASO,EAAYjD,GACnBuB,EAAQ,EACRC,EAAO,EACPO,aAAa2B,WAAW,QACxBC,GACD,CAED,SAASP,EAAWpD,GAClB,IAAM4D,EAAO,GAEbA,EAAKrC,MAAQoB,SAASkB,cAAc,sBAAsBd,UAE1D,IAAMvB,EAAOmB,SAASkB,cAAc,qBAAqBd,UAAUe,MAAM,KACzEF,EAAKpC,KAAiB,GAAVA,EAAK,GAAUA,EAAK,GAEhCoC,EAAKxC,WAAL2C,KAAAC,IAAkBrB,SAASkB,cAAc,6BAA6Bd,UAAUe,MAAM,KAAK,GAAM,GACjGF,EAAKvB,MAAQA,EAEb,IAAM4B,EAAaL,EAAKvB,MAAM6B,WAAU,SAAAC,GAAI,OAAmB,IAAfA,EAAK/B,KAAT,IAC5CwB,EAAKvB,MAAM+B,OAAOH,EAAY,EAAGhC,GAEjCF,aAAasC,QAAQ,OAAQxC,KAAKyC,UAAUV,GAC7C,CAED,SAASN,EAAkBtD,GACzBuE,IACA5B,SAAS6B,KAAKzB,UAAY,GAE1B,IAAML,EAAOJ,GAAW,GACxBK,SAAS6B,KAAKf,OAAOf,GAErB,IAAM+B,EA7FR,WACE,IAAMA,EAAQ9B,SAASC,cAAc,SAC/B8B,EAAU7C,KAAKC,MAAMC,aAAaC,QAAQ,YA2BhD,OAzBAyC,EAAM1B,UAAN,oGAAA4B,OAOKD,EAQCA,EAAQE,KAAI,SAACC,EAAKC,GAAN,uCAAAH,OAEJG,EAAQ,EAFJ,yBAAAH,OAGJE,EAAItD,MAHA,yBAAAoD,OAIJE,EAAIrD,KAJA,mCARd,wJAPJ,QAyBOiD,CACR,CA+DeM,GACdpC,SAAS6B,KAAKf,OAAOgB,EACtB,CAED,SAASjB,EAAkBxD,GACzBA,EAAEgF,OAAOC,UAAUC,OAAO,UAC1BvD,GAAWA,EACXI,aAAasC,QAAQ,UAAW1C,EACjC,CAED,SAASwD,IACP,IAkBqBC,EACjBC,EAnBEC,EAAW3C,SAASC,cAAc,OAexC,OAdA0C,EAASzC,UAAY,QAErByC,EAASvC,UAAT,wDAAA4B,OAEmBpD,GAAgB,EAFnC,4EAAAoD,OAMkBnD,EAAOuC,KAAKwB,MAAM/D,EAAO,IAAM,KAAOA,EAAO,GAAK,GAAKA,EAAO,GAAK,IAAMA,EAAO,IAAM,MANxG,2BAgBI6D,EAAUD,OADOA,EALP5D,GAMA4D,EAAS,EACvB9D,EAAWkE,aAAY,WACrB,IAAMhE,EAAOmB,SAASkB,cAAc,qBACpCwB,IACA7D,EAAKuB,UAAL,GAAA4B,OAAoBZ,KAAKwB,MAAMF,EAAU,IAAzC,KAAAV,OAAgDU,EAAU,GAAK,GAAK,IAAMA,EAAU,GAAKA,EAAU,GACpG,GAAE,KATIC,CACR,CAWD,SAASf,IACPkB,cAAcnE,GACdA,EAAW,IACZ,CA8BD,SAASoE,EAAWZ,EAAO1C,EAAOjB,EAAUwE,GAC1C,IAAMxB,EAAOxB,SAASC,cAAc,OAsBpC,OArBAuB,EAAKtB,UAAY,OACjBsB,EAAKyB,WAAY,EAEjBzB,EAAK0B,MAAMC,MAAQ3E,EAAW,KAC9BgD,EAAK0B,MAAME,OAAS5E,EAAW,KAC/BgD,EAAK0B,MAAM1D,KAAOwD,EAASxD,KAAOhB,EAAW,KAC7CgD,EAAK0B,MAAM3D,IAAMyD,EAASzD,IAAMf,EAAW,KAE3CkB,EAAM2D,KAAK,CACT7D,KAAMwD,EAASxD,KACfD,IAAKyD,EAASzD,IACdE,QACA6D,KAAM9B,IAGRA,EAAKpB,UAAYX,EAEjB+B,EAAKnB,iBAAiB,SAAS,SAAChD,GAAD,OAqCjC,SAAyBA,EAAG8E,GAG1B,GAAIoB,EAFS7D,EAAMyC,IAEU,OAC7BqB,EAASrB,EACV,CA1CuCsB,CAAgBpG,EAAG8E,EAA1B,IAC/BX,EAAKnB,iBAAiB,aAAa,SAAChD,GAAD,OAMrC,SAAyBA,EAAG8E,GAC1B,IAAMX,EAAO9B,EAAMyC,GACnB,GAAIoB,EAAkB/B,GAAO,OAAOnE,EAAEqG,iBACtCC,uBAAsB,kBAAMnC,EAAK8B,KAAKJ,MAAMU,WAAa,QAAnC,GAA6C,EACpE,CAV2CC,CAAgBxG,EAAG8E,EAA1B,IACnCX,EAAKnB,iBAAiB,WAAW,SAAChD,GAAD,OAAOyG,EAAczG,EAAG8E,EAAxB,IAE1BX,CACR,CAQD,SAASsC,EAAczG,EAAG8E,GACxB,IAAMX,EAAO9B,EAAMyC,GACb4B,EACEzE,EAAUE,KAAOhB,EADnBuF,EAECzE,EAAUC,IAAMf,EAEjBwF,EACE3G,EAAE4G,MAAQ1F,EAAYiB,KADxBwE,EAEC3G,EAAE6G,MAAQ3F,EAAYgB,IAGVyE,GAAgBD,GAAiBC,GAAgBD,EAAgBvF,IACrEwF,GAAeD,GAAgBC,GAAeD,EAAevF,IAE9CgF,EAASrB,GACvCwB,uBAAsB,kBAAMnC,EAAK8B,KAAKJ,MAAMU,WAAa,SAAnC,GAA8C,EACrE,CAED,SAASL,EAAkB/B,GAGzB,OAFiBJ,KAAK+C,IAAI7E,EAAUE,KAAOgC,EAAKhC,MACpC4B,KAAK+C,IAAI7E,EAAUC,IAAMiC,EAAKjC,KACd,CAC7B,CAiDD,SAAS6E,EAAiB/G,GACxBA,EAAEqG,iBACFjF,EAAU2C,KAAAC,IAAGhE,EAAEgF,OAAOjC,UAAUe,MAAM,KAAK,GAAM,GACjDvC,EAAQ,EACRC,EAAO,EACPO,aAAa2B,WAAW,QACxBC,GACD,CAED,SAASwC,EAASrB,GAChB,IAAMX,EAAO9B,EAAMyC,GAEnBnC,SAASkB,cAAc,sBAAsBd,YAEzCpB,GAASF,EAAYuF,OAEzB7C,EAAK8B,KAAKJ,MAAM1D,KAAOF,EAAUE,KAAOhB,EAAW,KACnDgD,EAAK8B,KAAKJ,MAAM3D,IAAMD,EAAUC,IAAMf,EAAW,KAEjD,IAAM8F,EAAc9C,EAAKhC,KACvB+E,EAAa/C,EAAKjC,IAEpBiC,EAAKhC,KAAOF,EAAUE,KACtBgC,EAAKjC,IAAMD,EAAUC,IAErBD,EAAUE,KAAO8E,EACjBhF,EAAUC,IAAMgF,EAEhB,IAAMC,EAAa9E,EAAM+E,OAAM,SAAAjD,GAC7B,OAAIA,IAASlC,IAEY,IAAlBA,EAAUC,KAAgC,IAAnBD,EAAUE,KACpCgC,EAAK/B,QAAU+B,EAAKjC,IAAM6B,KAAKsD,KAAKjG,GAAc+C,EAAKhC,KACvDgC,EAAK/B,QAAW+B,EAAKjC,IAAM6B,KAAKsD,KAAKjG,GAAc+C,EAAKhC,KAAQ,EACrE,IAED,GAAIgF,EAAY,CACd5C,IACA,IAAM+C,EAAQ3E,SAASkB,cAAc,sBAAsBd,UACzDwE,EAAO5E,SAASkB,cAAc,qBAAqBd,UACrDJ,SAASkB,cAAc,UAAUd,UAAjC,oCAAA4B,OAAiF4C,EAAjF,SAAA5C,OAA6F2C,EAA7F,WAKJ,SAAqB/F,EAAOC,GAC1B,IAAMgG,EAAczF,aAAaC,QAAQ,WACnC0C,EAAU8C,EAAc3F,KAAKC,MAAM0F,GAAe,GACxD9C,EAAQsB,KAAK,CAAEzE,QAAOC,SACtBO,aAAasC,QAAQ,UAAWxC,KAAKyC,UAAUI,EAAQ+C,MAAK,SAAChH,EAAGiH,GAAJ,OAAUA,EAAEnG,MAAQd,EAAEc,KAAtB,KAA8BoG,MAAM,EAAG,IACpG,CATGC,CAAYN,EAAOC,EACpB,CACF,CASD,SAAS5D,IACP,IACIkE,EACMC,EAAAC,EAAAC,EAFJpE,EAAO/B,KAAKC,MAAMC,aAAaC,QAAQ,SAEzC4B,GACFxC,EAAU,QAAA0G,EAAGlE,aAAH,EAAGA,EAAMxC,kBAAT,IAAA0G,IAAuB,GACjCvG,EAAK,QAAAwG,EAAGnE,aAAH,EAAGA,EAAMrC,aAAT,IAAAwG,IAAkB,EACvBvG,EAAI,QAAAwG,EAAGpE,aAAH,EAAGA,EAAMpC,YAAT,IAAAwG,IAAiB,EACrB/F,EAAY2B,EAAKvB,MAAM4F,MAAK,SAAA9D,GAAI,OAAmB,IAAfA,EAAK/B,KAAT,IAChCyF,EAAYjE,EAAKvB,QAOjBA,EAAQ,IACF2D,KANN/D,EAAY,CACVC,IAAK,EACLC,KAAM,EACNC,MAAO,IAMNhB,IAAYA,EAAa,KAE9BC,EAAU6G,EAAI,IAAIC,MAAM/G,EAAa,GAAGgH,QACrCxD,KAAI,SAAAyD,GAAC,OAAIA,EAAI,CAAR,IACLZ,MAAK,SAAChH,EAAGiH,GAAJ,OAAU3D,KAAKuE,SAAW,EAA1B,KACAC,QAAQ,GAEhB5F,SAAS6B,KAAKzB,UAAY,GAC1BwB,IAEA,IAAM7B,EAAOJ,IACbK,SAAS6B,KAAKf,OAAOf,GAErB,IAAM4C,EAAWH,IACjBxC,SAAS6B,KAAKf,OAAO6B,GAErB,IAAMkD,EA1NR,SAAqBX,GACnB1G,EAhKkB,IAgKO4C,KAAKsD,KAAKjG,GACnC,IAAMoH,EAAQ7F,SAASC,cAAc,OACrC4F,EAAM3F,UAAY,QAClB2F,EAAM3C,MAAMC,MAAQ2C,QACpBD,EAAM3C,MAAME,OAAS0C,QAErB,IAAK,IAAIrI,EAAI,EAAGA,EAAIgB,EAAYhB,IAC9B,GAAIyH,GAAaA,EAAUzH,GAAI,CAC7B,GAA2B,IAAvByH,EAAUzH,GAAGgC,MAAa,SAC9B,IAAM+B,EAAOuB,EAAWtF,EAAGyH,EAAUzH,GAAGgC,MAAOjB,EAAU0G,EAAUzH,IACnEoI,EAAM/E,OAAOU,EACd,KAAM,CACL,IAAMwB,EAAW,CACfxD,KAAM/B,EAAI2D,KAAKsD,KAAKjG,GACpBc,KAAM9B,EAAKA,EAAI2D,KAAKsD,KAAKjG,IAAgB2C,KAAKsD,KAAKjG,IAE/CgB,EAAQf,EAAQjB,GACtB,GAAc,IAAVgC,EAAa,SAEjB,IAAMsG,EAAOhD,EAAWtF,EAAGgC,EAAOjB,EAAUwE,GAC5C6C,EAAM/E,OAAOiF,EACd,CAGH,OADAF,EAAMG,WAAa,SAAA3I,GAAC,OAAIA,EAAEqG,gBAAN,EACbmC,CACR,CAgMeI,CAAYf,GAC1BlF,SAAS6B,KAAKf,OAAO+E,GACrBtH,EAAc,CACZiB,KAAMqG,EAAMK,wBAAwB1G,KACpCD,IAAKsG,EAAMK,wBAAwB3G,KAGrC,IAAM4G,EAtIR,SAA+BC,GAC7BA,EAAOA,EAAOhF,KAAKsD,KAAK0B,GAAQ,IAAMhF,KAAKsD,KAAK0B,GAAQ,MAExD,IAAMC,EAAarG,SAASC,cAAc,OAC1CoG,EAAWnG,UAAY,aAEvB,IAAMoG,EAAoBtG,SAASC,cAAc,OACjDqG,EAAkBpG,UAAY,sBAC9BoG,EAAkBlG,UAAlB,qBAAA4B,OAAmDoE,EAAnD,WAEAC,EAAWvF,OAAOwF,GAElB,IAAMC,EAAiBvG,SAASC,cAAc,MAC9CsG,EAAerG,UAAY,mBAE3B,IAAK,IAAIzC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAM+I,EAAiBxG,SAASC,cAAc,MAC9CuG,EAAetG,UAAY,mBAE3B,IAAMuG,EAAiBzG,SAASC,cAAc,KAC9CwG,EAAeC,KAAO,IACtBD,EAAevG,UAAY,mBAC3BuG,EAAerG,UAAY3C,EAAI,IAAMA,EAErCgJ,EAAepG,iBAAiB,QAAS+D,GAEzCoC,EAAe1F,OAAO2F,GACtBF,EAAezF,OAAO0F,EACvB,CAED,IAAMG,EAAkB3G,SAASC,cAAc,OAO/C,OANA0G,EAAgBzG,UAAY,oBAC5ByG,EAAgBvG,UAAY,gBAC5BuG,EAAgB7F,OAAOyF,GAEvBF,EAAWvF,OAAO6F,GAEXN,CACR,CAgGmBO,CAAsBnI,GACxCuB,SAAS6B,KAAKf,OAAOqF,EACtB,CAtXDzG,EAAM2D,KAAK/D,GA4XXU,SAASK,iBAAiB,oBAJ1B,WACEW,GACD,G","file":"../main.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","alert('Привет! К сожалению, не успел сделать dragndrop на мобильных. Буду очень благодарен, если вернёшься позже.');\n\nconst FIELD_WIDTH = 320;\nconst CLICK_AUDIO = new Audio('./audio/click.mp3');\n\nlet isAudio = JSON.parse(localStorage.getItem('isAudio')) ?? true;\n\nlet emptyCell = {\n  top: 0,\n  left: 0,\n  value: 0\n};\n\nlet cells = [];\ncells.push(emptyCell);\n\nlet fieldOffset;\nlet cellSize;\nlet cellsCount;\nlet numbers;\nlet interval;\nlet moves;\nlet time;\n\n\nfunction createResultsTable() {\n  const table = document.createElement('table');\n  const results = JSON.parse(localStorage.getItem('results'));\n\n  table.innerHTML = `\n    <tr>\n      <th>Position</th>\n      <th>Moves</th>\n      <th>Time</th>\n    </tr>\n\n    ${!results\n      ? `\n        <tr>\n          <td colspan=\"3\">\n            <p class=\"results-placeholder\">You have never won</p>\n          </td>\n        </tr>\n      `\n      : results.map((res, index) => (`\n        <tr>\n          <td>${index + 1}</td>\n          <td>${res.moves}</td>\n          <td>${res.time}</td>\n        </tr>\n      `))\n    }\n  `;\n\n  return table;\n}\n\nfunction createBtns(isStarted = true) {\n  const btns = document.createElement('div');\n  btns.className = 'btns';\n\n  const restartBtn = document.createElement('button');\n  restartBtn.className = 'btn';\n  restartBtn.innerHTML = 'Start';\n  restartBtn.addEventListener('click', handleStart);\n\n  const saveBtn = document.createElement('button');\n  saveBtn.className = 'btn';\n  saveBtn.innerHTML = 'Save';\n  saveBtn.disabled = !isStarted;\n  saveBtn.addEventListener('click', handleSave);\n\n  const resultsBtn = document.createElement('button');\n  resultsBtn.className = 'btn';\n  resultsBtn.innerHTML = 'Results';\n  resultsBtn.addEventListener('click', handleResultsShow);\n\n  const toggleAudio = document.createElement('button');\n  toggleAudio.className = isAudio ? 'btn active' : 'btn';\n  toggleAudio.innerHTML = 'Sound';\n  toggleAudio.addEventListener('click', handleAudioToggle);\n\n  btns.append(restartBtn, saveBtn, resultsBtn, toggleAudio);\n\n  return btns;\n}\n\nfunction handleStart(e) {\n  moves = 0;\n  time = 0;\n  localStorage.removeItem('game');\n  startGame();\n}\n\nfunction handleSave(e) {\n  const game = {};\n\n  game.moves = document.querySelector('.stats__moves span').innerHTML;\n\n  const time = document.querySelector('.stats__time span').innerHTML.split(':');\n  game.time = time[0] * 60 + time[1];\n\n  game.cellsCount = document.querySelector('.difficulty__current span').innerHTML.split('x')[0] ** 2;\n  game.cells = cells;\n\n  const emptyIndex = game.cells.findIndex(cell => cell.value === 0);\n  game.cells.splice(emptyIndex, 1, emptyCell);\n\n  localStorage.setItem('game', JSON.stringify(game));\n}\n\nfunction handleResultsShow(e) {\n  stopInterval();\n  document.body.innerHTML = '';\n\n  const btns = createBtns(false);\n  document.body.append(btns);\n\n  const table = createResultsTable();\n  document.body.append(table);\n}\n\nfunction handleAudioToggle(e) {\n  e.target.classList.toggle('active');\n  isAudio = !isAudio;\n  localStorage.setItem('isAudio', isAudio);\n}\n\nfunction createStatsBar() {\n  const statsBar = document.createElement('div');\n  statsBar.className = 'stats';\n\n  statsBar.innerHTML = `\n    <div class=\"stats__moves\">\n      Moves: <span>${moves ? moves : 0}</span>\n    </div>\n\n    <div class=\"stats__time\">\n      Time: <span>${time ? Math.floor(time / 60) + ':' + (time % 60 > 10 ? time % 60 : '0' + time % 60) : '0:0'}</span>\n    </div>\n  `;\n\n  startInterval(time);\n\n  return statsBar;\n}\n\nfunction startInterval(start) {\n  let seconds = start ?? 0;\n  interval = setInterval(() => {\n    const time = document.querySelector('.stats__time span');\n    seconds++;\n    time.innerHTML = `${Math.floor(seconds / 60)}:${seconds % 60 < 10 ? '0' + seconds % 60 : seconds % 60}`;\n  }, 1000);\n}\n\nfunction stopInterval() {\n  clearInterval(interval);\n  interval = null;\n}\n\nfunction createField(prevCells) {\n  cellSize = FIELD_WIDTH / Math.sqrt(cellsCount);\n  const field = document.createElement('div');\n  field.className = 'field';\n  field.style.width = FIELD_WIDTH + 'px';\n  field.style.height = FIELD_WIDTH + 'px';\n\n  for (let i = 0; i < cellsCount; i++) {\n    if (prevCells && prevCells[i]) {\n      if (prevCells[i].value === 0) continue;\n      const cell = createCell(i, prevCells[i].value, cellSize, prevCells[i], cellsCount);\n      field.append(cell);\n    } else {\n      const position = {\n        left: i % Math.sqrt(cellsCount),\n        top: (i - (i % Math.sqrt(cellsCount))) / Math.sqrt(cellsCount),\n      };\n      const value = numbers[i];\n      if (value === 0) continue;\n\n      const cell = createCell(i, value, cellSize, position, cellsCount);\n      field.append(cell);\n    }\n  }\n  field.ondragover = e => e.preventDefault();\n  return field;\n}\n\nfunction createCell(index, value, cellSize, position) {\n  const cell = document.createElement('div');\n  cell.className = 'cell';\n  cell.draggable = true;\n\n  cell.style.width = cellSize + 'px';\n  cell.style.height = cellSize + 'px';\n  cell.style.left = position.left * cellSize + 'px';\n  cell.style.top = position.top * cellSize + 'px';\n\n  cells.push({\n    left: position.left,\n    top: position.top,\n    value,\n    elem: cell\n  });\n\n  cell.innerHTML = value;\n\n  cell.addEventListener('click', (e) => handleCellClick(e, index));\n  cell.addEventListener('dragstart', (e) => handleDragStart(e, index));\n  cell.addEventListener('dragend', (e) => handleDragEnd(e, index));\n\n  return cell;\n};\n\nfunction handleDragStart(e, index) {\n  const cell = cells[index];\n  if (isCellInteractive(cell)) return e.preventDefault();\n  requestAnimationFrame(() => cell.elem.style.visibility = 'hidden', 0);\n}\n\nfunction handleDragEnd(e, index) {\n  const cell = cells[index];\n  const emptyPos = {\n    left: emptyCell.left * cellSize,\n    top: emptyCell.top * cellSize\n  };\n  const dragPos = {\n    left: e.pageX - fieldOffset.left,\n    top: e.pageY - fieldOffset.top\n  }\n\n  const xCondition = dragPos.left >= emptyPos.left && dragPos.left <= emptyPos.left + cellSize,\n    yCondition = dragPos.top >= emptyPos.top && dragPos.top <= emptyPos.top + cellSize;\n\n  if (xCondition && yCondition) moveCell(index);\n  requestAnimationFrame(() => cell.elem.style.visibility = 'visible', 0);\n}\n\nfunction isCellInteractive(cell) {\n  const leftDiff = Math.abs(emptyCell.left - cell.left),\n    topDiff = Math.abs(emptyCell.top - cell.top);\n  return leftDiff + topDiff > 1;\n}\n\nfunction handleCellClick(e, index) {\n  const cell = cells[index];\n\n  if (isCellInteractive(cell)) return;\n  moveCell(index);\n}\n\nfunction createDifficultyPanel(size) {\n  size = size ? Math.sqrt(size) + 'x' + Math.sqrt(size) : '4x4';\n\n  const difficulty = document.createElement('div');\n  difficulty.className = 'difficulty';\n\n  const difficultyCurrent = document.createElement('div');\n  difficultyCurrent.className = 'difficulty__current';\n  difficultyCurrent.innerHTML = `Frame size: <span>${size}</span>`;\n\n  difficulty.append(difficultyCurrent);\n\n  const difficultyList = document.createElement('ul');\n  difficultyList.className = 'difficulty__list';\n\n  for (let i = 3; i < 9; i++) {\n    const difficultyItem = document.createElement('li');\n    difficultyItem.className = 'difficulty__item';\n\n    const difficultyLink = document.createElement('a');\n    difficultyLink.href = '#';\n    difficultyLink.className = 'difficulty__link';\n    difficultyLink.innerHTML = i + 'x' + i;\n\n    difficultyLink.addEventListener('click', handleSizeChange);\n\n    difficultyItem.append(difficultyLink);\n    difficultyList.append(difficultyItem);\n  }\n\n  const difficultyOther = document.createElement('div');\n  difficultyOther.className = 'difficulty__other';\n  difficultyOther.innerHTML = 'Other sizes: ';\n  difficultyOther.append(difficultyList);\n\n  difficulty.append(difficultyOther);\n\n  return difficulty;\n};\n\nfunction handleSizeChange(e) {\n  e.preventDefault();\n  cellsCount = e.target.innerHTML.split('x')[0] ** 2;\n  moves = 0;\n  time = 0;\n  localStorage.removeItem('game');\n  startGame();\n}\n\nfunction moveCell(index) {\n  const cell = cells[index];\n\n  document.querySelector('.stats__moves span').innerHTML++;\n\n  if (isAudio) CLICK_AUDIO.play();\n\n  cell.elem.style.left = emptyCell.left * cellSize + 'px';\n  cell.elem.style.top = emptyCell.top * cellSize + 'px';\n\n  const currentLeft = cell.left,\n    currentTop = cell.top;\n\n  cell.left = emptyCell.left;\n  cell.top = emptyCell.top;\n\n  emptyCell.left = currentLeft;\n  emptyCell.top = currentTop;\n\n  const isFinished = cells.every(cell => {\n    if (cell === emptyCell) return true;\n\n    return emptyCell.top === 0 && emptyCell.left === 0\n      ? cell.value === cell.top * Math.sqrt(cellsCount) + cell.left\n      : cell.value === (cell.top * Math.sqrt(cellsCount) + cell.left) + 1;\n  });\n\n  if (isFinished) {\n    stopInterval();\n    const moves = document.querySelector('.stats__moves span').innerHTML,\n      time = document.querySelector('.stats__time span').innerHTML;\n    document.querySelector('.field').innerHTML = `Hooray! You solved the puzzle in ${time} and ${moves} moves!`;\n    saveResults(moves, time);\n  }\n}\n\nfunction saveResults(moves, time) {\n  const prevResults = localStorage.getItem('results');\n  const results = prevResults ? JSON.parse(prevResults) : [];\n  results.push({ moves, time });\n  localStorage.setItem('results', JSON.stringify(results.sort((a, b) => b.moves - a.moves)).slice(0, 11));\n}\n\nfunction startGame() {\n  const game = JSON.parse(localStorage.getItem('game'));\n  let prevCells;\n  if (game) {\n    cellsCount = game?.cellsCount ?? 16;\n    moves = game?.moves ?? 0;\n    time = game?.time ?? 0;\n    emptyCell = game.cells.find(cell => cell.value === 0);\n    prevCells = game.cells;\n  } else {\n    emptyCell = {\n      top: 0,\n      left: 0,\n      value: 0\n    };\n    cells = [];\n    cells.push(emptyCell);\n  }\n\n  if (!cellsCount) cellsCount = 16;\n\n  numbers = [...new Array(cellsCount - 1).keys()]\n    .map(x => x + 1)\n    .sort((a, b) => Math.random() - 0.5);\n  numbers.unshift(0);\n\n  document.body.innerHTML = '';\n  stopInterval();\n\n  const btns = createBtns();\n  document.body.append(btns);\n\n  const statsBar = createStatsBar();\n  document.body.append(statsBar);\n\n  const field = createField(prevCells);\n  document.body.append(field);\n  fieldOffset = {\n    left: field.getBoundingClientRect().left,\n    top: field.getBoundingClientRect().top\n  };\n\n  const diffuclty = createDifficultyPanel(cellsCount);\n  document.body.append(diffuclty);\n}\n\nfunction init() {\n  startGame();\n}\n\ndocument.addEventListener('DOMContentLoaded', init);"]}