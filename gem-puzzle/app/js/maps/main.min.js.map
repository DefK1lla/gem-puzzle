{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/js/main.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","fieldOffset","cellSize","cellsCount","numbers","interval","moves","time","FIELD_WIDTH","CLICK_AUDIO","Audio","isAudio","_JSON$parse","JSON","parse","localStorage","getItem","emptyCell","top","left","value","cells","createBtns","isStarted","arguments","undefined","btns","document","createElement","className","restartBtn","innerHTML","addEventListener","handleStart","saveBtn","disabled","handleSave","resultsBtn","handleResultsShow","toggleAudio","handleAudioToggle","append","removeItem","startGame","game","querySelector","split","Math","pow","emptyIndex","findIndex","cell","splice","setItem","stringify","stopInterval","body","table","results","concat","map","res","index","createResultsTable","target","classList","toggle","createStatsBar","start","seconds","statsBar","floor","setInterval","clearInterval","createCell","position","draggable","style","width","height","push","elem","isCellNonInteractive","moveCell","handleCellClick","preventDefault","requestAnimationFrame","visibility","handleDragStart","_getConditions2","getConditions","xCondition","yCondition","handleDragEnd","_getConditions","targetTouches","handleTouchEnd","emptyPos","dragPos","pageX","pageY","abs","handleSizeChange","sqrt","play","currentLeft","currentTop","isFinished","every","_moves","_time","prevResults","sort","b","slice","saveResults","prevCells","_game$cellsCount","_game$moves","_game$time","find","_toConsumableArray","Array","keys","x","random","unshift","field","_cell","ondragover","createField","getBoundingClientRect","diffuclty","size","difficulty","difficultyCurrent","difficultyList","difficultyItem","difficultyLink","href","difficultyOther","createDifficultyPanel"],"mappings":"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","file":"../main.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","const FIELD_WIDTH = 320;\nconst CLICK_AUDIO = new Audio('./audio/click.mp3');\n\nlet isAudio = JSON.parse(localStorage.getItem('isAudio')) ?? true;\n\nlet emptyCell = {\n  top: 0,\n  left: 0,\n  value: 0\n};\n\nlet cells = [];\ncells.push(emptyCell);\n\nlet fieldOffset;\nlet cellSize;\nlet cellsCount;\nlet numbers;\nlet interval;\nlet moves;\nlet time;\n\n\nfunction createResultsTable() {\n  const table = document.createElement('table');\n  const results = JSON.parse(localStorage.getItem('results'));\n\n  table.innerHTML = `\n    <tr>\n      <th>Position</th>\n      <th>Moves</th>\n      <th>Time</th>\n    </tr>\n\n    ${!results\n      ? `\n        <tr>\n          <td colspan=\"3\">\n            <p class=\"results-placeholder\">You have never won</p>\n          </td>\n        </tr>\n      `\n      : results.map((res, index) => (`\n        <tr>\n          <td>${index + 1}</td>\n          <td>${res.moves}</td>\n          <td>${res.time}</td>\n        </tr>\n      `))\n    }\n  `;\n\n  return table;\n}\n\nfunction createBtns(isStarted = true) {\n  const btns = document.createElement('div');\n  btns.className = 'btns';\n\n  const restartBtn = document.createElement('button');\n  restartBtn.className = 'btn';\n  restartBtn.innerHTML = 'Start';\n  restartBtn.addEventListener('click', handleStart);\n\n  const saveBtn = document.createElement('button');\n  saveBtn.className = 'btn';\n  saveBtn.innerHTML = 'Save';\n  saveBtn.disabled = !isStarted;\n  saveBtn.addEventListener('click', handleSave);\n\n  const resultsBtn = document.createElement('button');\n  resultsBtn.className = 'btn';\n  resultsBtn.innerHTML = 'Results';\n  resultsBtn.addEventListener('click', handleResultsShow);\n\n  const toggleAudio = document.createElement('button');\n  toggleAudio.className = isAudio ? 'btn active' : 'btn';\n  toggleAudio.innerHTML = 'Sound';\n  toggleAudio.addEventListener('click', handleAudioToggle);\n\n  btns.append(restartBtn, saveBtn, resultsBtn, toggleAudio);\n\n  return btns;\n}\n\nfunction handleStart(e) {\n  moves = 0;\n  time = 0;\n  localStorage.removeItem('game');\n  startGame();\n}\n\nfunction handleSave(e) {\n  const game = {};\n\n  game.moves = document.querySelector('.stats__moves span').innerHTML;\n\n  const time = document.querySelector('.stats__time span').innerHTML.split(':');\n  game.time = time[0] * 60 + time[1];\n\n  game.cellsCount = document.querySelector('.difficulty__current span').innerHTML.split('x')[0] ** 2;\n  game.cells = cells;\n\n  const emptyIndex = game.cells.findIndex(cell => cell.value === 0);\n  game.cells.splice(emptyIndex, 1, emptyCell);\n\n  localStorage.setItem('game', JSON.stringify(game));\n}\n\nfunction handleResultsShow(e) {\n  stopInterval();\n  document.body.innerHTML = '';\n\n  const btns = createBtns(false);\n  document.body.append(btns);\n\n  const table = createResultsTable();\n  document.body.append(table);\n}\n\nfunction handleAudioToggle(e) {\n  e.target.classList.toggle('btn_active');\n  isAudio = !isAudio;\n  localStorage.setItem('isAudio', isAudio);\n}\n\nfunction createStatsBar() {\n  const statsBar = document.createElement('div');\n  statsBar.className = 'stats';\n\n  statsBar.innerHTML = `\n    <div class=\"stats__moves\">\n      Moves: <span>${moves ? moves : 0}</span>\n    </div>\n\n    <div class=\"stats__time\">\n      Time: <span>${time ? Math.floor(time / 60) + ':' + (time % 60 > 10 ? time % 60 : '0' + time % 60) : '0:0'}</span>\n    </div>\n  `;\n\n  startInterval(time);\n\n  return statsBar;\n}\n\nfunction startInterval(start) {\n  let seconds = start ?? 0;\n  interval = setInterval(() => {\n    const time = document.querySelector('.stats__time span');\n    seconds++;\n    time.innerHTML = `${Math.floor(seconds / 60)}:${seconds % 60 < 10 ? '0' + seconds % 60 : seconds % 60}`;\n  }, 1000);\n}\n\nfunction stopInterval() {\n  clearInterval(interval);\n  interval = null;\n}\n\nfunction createField(prevCells) {\n  cellSize = FIELD_WIDTH / Math.sqrt(cellsCount);\n  const field = document.createElement('div');\n  field.className = 'field';\n  field.style.width = FIELD_WIDTH + 'px';\n  field.style.height = FIELD_WIDTH + 'px';\n\n  for (let i = 0; i < cellsCount; i++) {\n    if (prevCells && prevCells[i]) {\n      if (prevCells[i].value === 0) continue;\n      const cell = createCell(i, prevCells[i].value, cellSize, prevCells[i], cellsCount);\n      field.append(cell);\n    } else {\n      const position = {\n        left: i % Math.sqrt(cellsCount),\n        top: (i - (i % Math.sqrt(cellsCount))) / Math.sqrt(cellsCount),\n      };\n      const value = numbers[i];\n      if (value === 0) continue;\n\n      const cell = createCell(i, value, cellSize, position, cellsCount);\n      field.append(cell);\n    }\n  }\n  field.ondragover = e => e.preventDefault();\n  return field;\n}\n\nfunction createCell(index, value, cellSize, position) {\n  const cell = document.createElement('div');\n  cell.className = 'cell';\n  cell.draggable = true;\n\n  cell.style.width = cellSize + 'px';\n  cell.style.height = cellSize + 'px';\n  cell.style.left = position.left * cellSize + 'px';\n  cell.style.top = position.top * cellSize + 'px';\n\n  cells.push({\n    left: position.left,\n    top: position.top,\n    value,\n    elem: cell\n  });\n\n  cell.innerHTML = value;\n\n  cell.addEventListener('click', (e) => handleCellClick(e, index));\n  cell.addEventListener('dragstart', (e) => handleDragStart(e, index));\n  cell.addEventListener('dragend', (e) => handleDragEnd(e, index));\n  cell.addEventListener('touchmove', (e) => handleTouchEnd(e, index));\n\n\n  return cell;\n};\n\nfunction getConditions(e) {\n  const emptyPos = {\n    left: emptyCell.left * cellSize,\n    top: emptyCell.top * cellSize\n  };\n  const dragPos = {\n    left: e.pageX - fieldOffset.left,\n    top: e.pageY - fieldOffset.top\n  }\n  const xCondition = dragPos.left >= emptyPos.left && dragPos.left <= emptyPos.left + cellSize,\n    yCondition = dragPos.top >= emptyPos.top && dragPos.top <= emptyPos.top + cellSize;\n\n  return {\n    xCondition,\n    yCondition\n  };\n}\n\nfunction handleTouchEnd(e, index) {\n  e.preventDefault();\n\n  const cell = cells[index];\n  if (isCellNonInteractive(cell)) return e.preventDefault();\n\n  const touch = e.targetTouches[0]\n  const { xCondition, yCondition } = getConditions(touch);\n\n  if (xCondition && yCondition) moveCell(index);\n}\n\nfunction handleDragStart(e, index) {\n  const cell = cells[index];\n  if (isCellNonInteractive(cell)) return e.preventDefault();\n  requestAnimationFrame(() => cell.elem.style.visibility = 'hidden', 0);\n}\n\nfunction handleDragEnd(e, index) {\n  const cell = cells[index];\n\n  const { xCondition, yCondition } = getConditions(e);\n\n  if (xCondition && yCondition) moveCell(index);\n  requestAnimationFrame(() => cell.elem.style.visibility = 'visible', 0);\n}\n\nfunction isCellNonInteractive(cell) {\n  const leftDiff = Math.abs(emptyCell.left - cell.left),\n    topDiff = Math.abs(emptyCell.top - cell.top);\n  return leftDiff + topDiff > 1;\n}\n\nfunction handleCellClick(e, index) {\n  const cell = cells[index];\n\n  if (isCellNonInteractive(cell)) return;\n  moveCell(index);\n}\n\nfunction createDifficultyPanel(size) {\n  size = size ? Math.sqrt(size) + 'x' + Math.sqrt(size) : '4x4';\n\n  const difficulty = document.createElement('div');\n  difficulty.className = 'difficulty';\n\n  const difficultyCurrent = document.createElement('div');\n  difficultyCurrent.className = 'difficulty__current';\n  difficultyCurrent.innerHTML = `Frame size: <span>${size}</span>`;\n\n  difficulty.append(difficultyCurrent);\n\n  const difficultyList = document.createElement('ul');\n  difficultyList.className = 'difficulty__list';\n\n  for (let i = 3; i < 9; i++) {\n    const difficultyItem = document.createElement('li');\n    difficultyItem.className = 'difficulty__item';\n\n    const difficultyLink = document.createElement('a');\n    difficultyLink.href = '#';\n    difficultyLink.className = 'difficulty__link';\n    difficultyLink.innerHTML = i + 'x' + i;\n\n    difficultyLink.addEventListener('click', handleSizeChange);\n\n    difficultyItem.append(difficultyLink);\n    difficultyList.append(difficultyItem);\n  }\n\n  const difficultyOther = document.createElement('div');\n  difficultyOther.className = 'difficulty__other';\n  difficultyOther.innerHTML = 'Other sizes: ';\n  difficultyOther.append(difficultyList);\n\n  difficulty.append(difficultyOther);\n\n  return difficulty;\n};\n\nfunction handleSizeChange(e) {\n  e.preventDefault();\n  cellsCount = e.target.innerHTML.split('x')[0] ** 2;\n  moves = 0;\n  time = 0;\n  cellSize = FIELD_WIDTH / Math.sqrt(cellsCount);\n  localStorage.removeItem('game');\n  startGame();\n}\n\nfunction moveCell(index) {\n  const cell = cells[index];\n\n  document.querySelector('.stats__moves span').innerHTML++;\n\n  if (isAudio) CLICK_AUDIO.play();\n\n  cell.elem.style.left = emptyCell.left * cellSize + 'px';\n  cell.elem.style.top = emptyCell.top * cellSize + 'px';\n\n  const currentLeft = cell.left,\n    currentTop = cell.top;\n\n  cell.left = emptyCell.left;\n  cell.top = emptyCell.top;\n\n  emptyCell.left = currentLeft;\n  emptyCell.top = currentTop;\n\n  const isFinished = cells.every(cell => {\n    if (cell === emptyCell) return true;\n\n    return emptyCell.top === 0 && emptyCell.left === 0\n      ? cell.value === cell.top * Math.sqrt(cellsCount) + cell.left\n      : cell.value === (cell.top * Math.sqrt(cellsCount) + cell.left) + 1;\n  });\n\n  if (isFinished) {\n    stopInterval();\n    const moves = document.querySelector('.stats__moves span').innerHTML,\n      time = document.querySelector('.stats__time span').innerHTML;\n    document.querySelector('.field').innerHTML = `Hooray! You solved the puzzle in ${time} and ${moves} moves!`;\n    saveResults(moves, time);\n    localStorage.removeItem('game');\n  }\n}\n\nfunction saveResults(moves, time) {\n  const prevResults = localStorage.getItem('results');\n  const results = prevResults ? JSON.parse(prevResults) : [];\n  results.push({ moves, time });\n  localStorage.setItem('results', JSON.stringify(results.sort((a, b) => b.moves - a.moves)).slice(0, 11));\n}\n\nfunction startGame() {\n  const game = JSON.parse(localStorage.getItem('game'));\n  let prevCells;\n  if (game) {\n    cellsCount = game?.cellsCount ?? 16;\n    moves = game?.moves ?? 0;\n    time = game?.time ?? 0;\n    emptyCell = game.cells.find(cell => cell.value === 0);\n    prevCells = game.cells;\n  } else {\n    emptyCell = {\n      top: 0,\n      left: 0,\n      value: 0\n    };\n    cells = [];\n    cells.push(emptyCell);\n  }\n\n  if (!cellsCount) cellsCount = 16;\n\n  numbers = [...new Array(cellsCount - 1).keys()]\n    .map(x => x + 1)\n    .sort((a, b) => Math.random() - 0.5);\n  numbers.unshift(0);\n\n  document.body.innerHTML = '';\n  stopInterval();\n\n  const btns = createBtns();\n  document.body.append(btns);\n\n  const statsBar = createStatsBar();\n  document.body.append(statsBar);\n\n  const field = createField(prevCells);\n  document.body.append(field);\n  fieldOffset = {\n    left: field.getBoundingClientRect().left,\n    top: field.getBoundingClientRect().top\n  };\n\n  const diffuclty = createDifficultyPanel(cellsCount);\n  document.body.append(diffuclty);\n}\n\nfunction init() {\n  startGame();\n}\n\ndocument.addEventListener('DOMContentLoaded', init);"]}