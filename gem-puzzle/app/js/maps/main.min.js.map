{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/js/main.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","cellSize","emptyCell","top","left","value","cells","push","numbers","Array","keys","map","x","sort","b","Math","random","createCell","index","cellWSize","position","cell","document","createElement","className","style","width","height","elem","innerHTML","addEventListener","leftDiff","abs","topDiff","currentLeft","currentTop","isFinished","every","querySelector","moveCell","unshift","btns","restartBtn","console","log","target","saveBtn","resultsBtn","append","createBtns","body","field","cellsCount","sqrt","FIELD_WIDTH","createField"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,KAAAJ,EAAAI,GAAA,KAAAE,EAAA,mBAAAC,iBAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,MAAAI,EAAA,OAAAA,EAAAJ,GAAA,OAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,WAAAK,EAAAE,KAAA,mBAAAF,CAAA,KAAAG,EAAAX,EAAAG,GAAA,CAAAS,QAAA,IAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,SAAA,SAAAd,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,MAAA,GAAAa,IAAAC,QAAAd,EAAAC,EAAAC,EAAAC,EAAA,QAAAD,EAAAG,GAAAS,OAAA,SAAAL,EAAA,mBAAAD,iBAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,CAAA,eAAAI,EAAAS,EAAAH,G,uHCAA,IAEII,EAEEC,EAAY,CAChBC,IAAK,EACLC,KAAM,EACNC,MAAO,GAGHC,EAAQ,GACdA,EAAMC,KAAKL,GAEX,I,EAAMM,G,EAAc,IAAIC,MAAM,IAAIC,O,knBAC/BC,KAAI,SAAAC,GAAC,OAAIA,EAAI,CAAR,IACLC,MAAK,SAACpB,EAAGqB,GAAJ,OAAUC,KAAKC,SAAW,EAA1B,IA+CR,SAASC,EAAWC,EAAOb,EAAOc,EAAWC,GAC3C,IAAMC,EAAOC,SAASC,cAAc,OAmBpC,OAlBAF,EAAKG,UAAY,OAEjBH,EAAKI,MAAMC,MAAQP,EAAY,KAC/BE,EAAKI,MAAME,OAASR,EAAY,KAChCE,EAAKI,MAAMrB,KAAOgB,EAAShB,KAAOe,EAAY,KAC9CE,EAAKI,MAAMtB,IAAMiB,EAASjB,IAAMgB,EAAY,KAE5Cb,EAAMC,KAAK,CACTH,KAAMgB,EAAShB,KACfD,IAAKiB,EAASjB,IACdE,QACAuB,KAAMP,IAGRA,EAAKQ,UAAYxB,EAEjBgB,EAAKS,iBAAiB,SAAS,SAAC9C,GAAD,OAKjC,SAAkBkC,GAChB,IAAMG,EAAOf,EAAMY,GACba,EAAWhB,KAAKiB,IAAI9B,EAAUE,KAAOiB,EAAKjB,MAC9C6B,EAAUlB,KAAKiB,IAAI9B,EAAUC,IAAMkB,EAAKlB,KAE1C,GAAI4B,EAAWE,EAAU,EAAG,OAE5BZ,EAAKO,KAAKH,MAAMrB,KAAOF,EAAUE,KAAOH,EAAW,KACnDoB,EAAKO,KAAKH,MAAMtB,IAAMD,EAAUC,IAAMF,EAAW,KAEjD,IAAMiC,EAAcb,EAAKjB,KACvB+B,EAAad,EAAKlB,IAEpBkB,EAAKjB,KAAOF,EAAUE,KACtBiB,EAAKlB,IAAMD,EAAUC,IAErBD,EAAUE,KAAO8B,EACjBhC,EAAUC,IAAMgC,EAEhB,IAAMC,EAAa9B,EAAM+B,OAAM,SAAAhB,GAC7B,OAAIA,IAASnB,IAEY,IAAlBA,EAAUC,KAAgC,IAAnBD,EAAUE,KACpCiB,EAAKhB,QAAqB,EAAXgB,EAAKlB,IAAUkB,EAAKjB,KACnCiB,EAAKhB,QAAsB,EAAXgB,EAAKlB,IAAUkB,EAAKjB,KAAQ,EACjD,IAEGgC,IAAYd,SAASgB,cAAc,UAAUT,UAAY,UAC9D,CAjCuCU,CAASrB,EAAhB,IAExBG,CACR,CAnEDb,EAAQgC,QAAQ,GAmGhBlB,SAASQ,iBAAiB,oBAAoB,WAC5C,IAAMW,EAlGR,WACE,IAAMA,EAAOnB,SAASC,cAAc,OACpCkB,EAAKjB,UAAY,OAEjB,IAAMkB,EAAapB,SAASC,cAAc,UAC1CmB,EAAWlB,UAAY,MACvBkB,EAAWb,UAAY,UACvBa,EAAWZ,iBAAiB,SAAS,SAAC9C,GAAQ2D,QAAQC,IAAI5D,EAAE6D,OAAOhB,UAAY,IAE/E,IAAMiB,EAAUxB,SAASC,cAAc,UACvCuB,EAAQtB,UAAY,MACpBsB,EAAQjB,UAAY,OACpBiB,EAAQhB,iBAAiB,SAAS,SAAC9C,GAAQ2D,QAAQC,IAAI5D,EAAE6D,OAAOhB,UAAY,IAE5E,IAAMkB,EAAazB,SAASC,cAAc,UAO1C,OANAwB,EAAWvB,UAAY,MACvBuB,EAAWlB,UAAY,UACvBkB,EAAWjB,iBAAiB,SAAS,SAAC9C,GAAQ2D,QAAQC,IAAI5D,EAAE6D,OAAOhB,UAAY,IAE/EY,EAAKO,OAAON,EAAYI,EAASC,GAE1BN,CACR,CA4EcQ,GACb3B,SAAS4B,KAAKF,OAAOP,GAErB,IAAMU,EA7ER,SAAqBC,GACnBnD,EA3CkB,IA2COc,KAAKsC,KAAKD,GACnC,IAAMD,EAAQ7B,SAASC,cAAc,OACrC4B,EAAM3B,UAAY,QAClB2B,EAAM1B,MAAMC,MAAQ4B,QACpBH,EAAM1B,MAAME,OAAS2B,QAErB,IAAK,IAAIlE,EAAI,EAAGA,EAAIgE,EAAYhE,IAAK,CACnC,IAAMgC,EAAW,CACfhB,KAAMhB,EAAI,EACVe,KAAMf,EAAKA,EAAI,GAAM,GAGjBiC,EAAOJ,EAAW7B,EADVoB,EAAQpB,GACYa,EAAUmB,GAC5C+B,EAAMH,OAAO3B,EACd,CAED,OAAO8B,CACR,CA2DeI,CAAY,IAC1BjC,SAAS4B,KAAKF,OAAOG,EACtB,G","file":"../main.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","const FIELD_WIDTH = 320;\n\nlet cellSize;\n\nconst emptyCell = {\n  top: 0,\n  left: 0,\n  value: 0\n};\n\nconst cells = [];\ncells.push(emptyCell);\n\nconst numbers = [...new Array(15).keys()]\n  .map(x => x + 1)\n  .sort((a, b) => Math.random() - 0.5);\nnumbers.unshift(0);\n\nfunction createBtns() {\n  const btns = document.createElement('div');\n  btns.className = 'btns';\n\n  const restartBtn = document.createElement('button');\n  restartBtn.className = 'btn';\n  restartBtn.innerHTML = 'Restart';\n  restartBtn.addEventListener('click', (e) => { console.log(e.target.innerHTML) });\n\n  const saveBtn = document.createElement('button');\n  saveBtn.className = 'btn';\n  saveBtn.innerHTML = 'Save';\n  saveBtn.addEventListener('click', (e) => { console.log(e.target.innerHTML) });\n\n  const resultsBtn = document.createElement('button');\n  resultsBtn.className = 'btn';\n  resultsBtn.innerHTML = 'Results';\n  resultsBtn.addEventListener('click', (e) => { console.log(e.target.innerHTML) });\n\n  btns.append(restartBtn, saveBtn, resultsBtn);\n\n  return btns;\n}\n\nfunction createField(cellsCount) {\n  cellSize = FIELD_WIDTH / Math.sqrt(cellsCount);\n  const field = document.createElement('div');\n  field.className = 'field';\n  field.style.width = FIELD_WIDTH + 'px';\n  field.style.height = FIELD_WIDTH + 'px';\n\n  for (let i = 1; i < cellsCount; i++) {\n    const position = {\n      left: i % 4,\n      top: (i - (i % 4)) / 4,\n    };\n    const value = numbers[i];\n    const cell = createCell(i, value, cellSize, position);\n    field.append(cell);\n  }\n\n  return field;\n}\n\nfunction createCell(index, value, cellWSize, position) {\n  const cell = document.createElement('div');\n  cell.className = 'cell';\n\n  cell.style.width = cellWSize + 'px';\n  cell.style.height = cellWSize + 'px';\n  cell.style.left = position.left * cellWSize + 'px';\n  cell.style.top = position.top * cellWSize + 'px';\n\n  cells.push({\n    left: position.left,\n    top: position.top,\n    value,\n    elem: cell\n  });\n\n  cell.innerHTML = value;\n\n  cell.addEventListener('click', (e) => moveCell(index));\n\n  return cell;\n};\n\nfunction moveCell(index) {\n  const cell = cells[index];\n  const leftDiff = Math.abs(emptyCell.left - cell.left),\n    topDiff = Math.abs(emptyCell.top - cell.top);\n\n  if (leftDiff + topDiff > 1) return;\n\n  cell.elem.style.left = emptyCell.left * cellSize + 'px';\n  cell.elem.style.top = emptyCell.top * cellSize + 'px';\n\n  const currentLeft = cell.left,\n    currentTop = cell.top;\n\n  cell.left = emptyCell.left;\n  cell.top = emptyCell.top;\n\n  emptyCell.left = currentLeft;\n  emptyCell.top = currentTop;\n\n  const isFinished = cells.every(cell => {\n    if (cell === emptyCell) return true;\n\n    return emptyCell.top === 0 && emptyCell.left === 0\n      ? cell.value === cell.top * 4 + cell.left\n      : cell.value === (cell.top * 4 + cell.left) + 1\n  });\n\n  if (isFinished) document.querySelector('.field').innerHTML = 'You win'\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const btns = createBtns();\n  document.body.append(btns);\n\n  const field = createField(16);\n  document.body.append(field);\n});"]}